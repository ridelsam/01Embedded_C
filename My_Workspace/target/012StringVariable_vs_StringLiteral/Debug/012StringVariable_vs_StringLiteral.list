
012StringVariable_vs_StringLiteral.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001250  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000110  08001400  08001400  00011400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001510  08001510  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001510  08001510  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001510  08001510  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001510  08001510  00011510  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001514  08001514  00011514  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001518  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000038  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000009c  2000009c  00020064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002392  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000060e  00000000  00000000  00022426  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000118  00000000  00000000  00022a38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000e0  00000000  00000000  00022b50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002c02  00000000  00000000  00022c30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001328  00000000  00000000  00025832  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009763  00000000  00000000  00026b5a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000302bd  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b48  00000000  00000000  00030310  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080013e8 	.word	0x080013e8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	080013e8 	.word	0x080013e8

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <main>:
#include <stdint.h>
#include <stdio.h>


int main(void)
{
 8000290:	b5b0      	push	{r4, r5, r7, lr}
 8000292:	b086      	sub	sp, #24
 8000294:	af00      	add	r7, sp, #0
    char msg1[] = "Hello, how are you?";
 8000296:	4b10      	ldr	r3, [pc, #64]	; (80002d8 <main+0x48>)
 8000298:	1d3c      	adds	r4, r7, #4
 800029a:	461d      	mov	r5, r3
 800029c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800029e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80002a0:	682b      	ldr	r3, [r5, #0]
 80002a2:	6023      	str	r3, [r4, #0]
    char const *pmsg2 = "fastbitlab.com";
 80002a4:	4b0d      	ldr	r3, [pc, #52]	; (80002dc <main+0x4c>)
 80002a6:	603b      	str	r3, [r7, #0]

    msg1[0] = 'b';
 80002a8:	2362      	movs	r3, #98	; 0x62
 80002aa:	713b      	strb	r3, [r7, #4]




    printf("Message is : %s\n", msg1);
 80002ac:	1d3b      	adds	r3, r7, #4
 80002ae:	4619      	mov	r1, r3
 80002b0:	480b      	ldr	r0, [pc, #44]	; (80002e0 <main+0x50>)
 80002b2:	f000 f943 	bl	800053c <iprintf>
    printf("Message is : %s\n", pmsg2);
 80002b6:	683b      	ldr	r3, [r7, #0]
 80002b8:	4619      	mov	r1, r3
 80002ba:	4809      	ldr	r0, [pc, #36]	; (80002e0 <main+0x50>)
 80002bc:	f000 f93e 	bl	800053c <iprintf>
    printf("Address of 'msg2' variable =%p\n", &pmsg2);
 80002c0:	463b      	mov	r3, r7
 80002c2:	4619      	mov	r1, r3
 80002c4:	4807      	ldr	r0, [pc, #28]	; (80002e4 <main+0x54>)
 80002c6:	f000 f939 	bl	800053c <iprintf>
    printf("Value of 'msg2' variable =%p\n", pmsg2);
 80002ca:	683b      	ldr	r3, [r7, #0]
 80002cc:	4619      	mov	r1, r3
 80002ce:	4806      	ldr	r0, [pc, #24]	; (80002e8 <main+0x58>)
 80002d0:	f000 f934 	bl	800053c <iprintf>
    for(;;);
 80002d4:	e7fe      	b.n	80002d4 <main+0x44>
 80002d6:	bf00      	nop
 80002d8:	08001464 	.word	0x08001464
 80002dc:	08001400 	.word	0x08001400
 80002e0:	08001410 	.word	0x08001410
 80002e4:	08001424 	.word	0x08001424
 80002e8:	08001444 	.word	0x08001444

080002ec <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002ec:	b480      	push	{r7}
 80002ee:	b083      	sub	sp, #12
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	4603      	mov	r3, r0
 80002f4:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002f6:	4b0f      	ldr	r3, [pc, #60]	; (8000334 <ITM_SendChar+0x48>)
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	4a0e      	ldr	r2, [pc, #56]	; (8000334 <ITM_SendChar+0x48>)
 80002fc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000300:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000302:	4b0d      	ldr	r3, [pc, #52]	; (8000338 <ITM_SendChar+0x4c>)
 8000304:	681b      	ldr	r3, [r3, #0]
 8000306:	4a0c      	ldr	r2, [pc, #48]	; (8000338 <ITM_SendChar+0x4c>)
 8000308:	f043 0301 	orr.w	r3, r3, #1
 800030c:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800030e:	bf00      	nop
 8000310:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	f003 0301 	and.w	r3, r3, #1
 800031a:	2b00      	cmp	r3, #0
 800031c:	d0f8      	beq.n	8000310 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800031e:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8000322:	79fb      	ldrb	r3, [r7, #7]
 8000324:	6013      	str	r3, [r2, #0]
}
 8000326:	bf00      	nop
 8000328:	370c      	adds	r7, #12
 800032a:	46bd      	mov	sp, r7
 800032c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000330:	4770      	bx	lr
 8000332:	bf00      	nop
 8000334:	e000edfc 	.word	0xe000edfc
 8000338:	e0000e00 	.word	0xe0000e00

0800033c <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800033c:	b580      	push	{r7, lr}
 800033e:	b086      	sub	sp, #24
 8000340:	af00      	add	r7, sp, #0
 8000342:	60f8      	str	r0, [r7, #12]
 8000344:	60b9      	str	r1, [r7, #8]
 8000346:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000348:	2300      	movs	r3, #0
 800034a:	617b      	str	r3, [r7, #20]
 800034c:	e00a      	b.n	8000364 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800034e:	f3af 8000 	nop.w
 8000352:	4601      	mov	r1, r0
 8000354:	68bb      	ldr	r3, [r7, #8]
 8000356:	1c5a      	adds	r2, r3, #1
 8000358:	60ba      	str	r2, [r7, #8]
 800035a:	b2ca      	uxtb	r2, r1
 800035c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800035e:	697b      	ldr	r3, [r7, #20]
 8000360:	3301      	adds	r3, #1
 8000362:	617b      	str	r3, [r7, #20]
 8000364:	697a      	ldr	r2, [r7, #20]
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	429a      	cmp	r2, r3
 800036a:	dbf0      	blt.n	800034e <_read+0x12>
	}

return len;
 800036c:	687b      	ldr	r3, [r7, #4]
}
 800036e:	4618      	mov	r0, r3
 8000370:	3718      	adds	r7, #24
 8000372:	46bd      	mov	sp, r7
 8000374:	bd80      	pop	{r7, pc}

08000376 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000376:	b580      	push	{r7, lr}
 8000378:	b086      	sub	sp, #24
 800037a:	af00      	add	r7, sp, #0
 800037c:	60f8      	str	r0, [r7, #12]
 800037e:	60b9      	str	r1, [r7, #8]
 8000380:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000382:	2300      	movs	r3, #0
 8000384:	617b      	str	r3, [r7, #20]
 8000386:	e009      	b.n	800039c <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000388:	68bb      	ldr	r3, [r7, #8]
 800038a:	1c5a      	adds	r2, r3, #1
 800038c:	60ba      	str	r2, [r7, #8]
 800038e:	781b      	ldrb	r3, [r3, #0]
 8000390:	4618      	mov	r0, r3
 8000392:	f7ff ffab 	bl	80002ec <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000396:	697b      	ldr	r3, [r7, #20]
 8000398:	3301      	adds	r3, #1
 800039a:	617b      	str	r3, [r7, #20]
 800039c:	697a      	ldr	r2, [r7, #20]
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	429a      	cmp	r2, r3
 80003a2:	dbf1      	blt.n	8000388 <_write+0x12>
	}
	return len;
 80003a4:	687b      	ldr	r3, [r7, #4]
}
 80003a6:	4618      	mov	r0, r3
 80003a8:	3718      	adds	r7, #24
 80003aa:	46bd      	mov	sp, r7
 80003ac:	bd80      	pop	{r7, pc}

080003ae <_close>:

int _close(int file)
{
 80003ae:	b480      	push	{r7}
 80003b0:	b083      	sub	sp, #12
 80003b2:	af00      	add	r7, sp, #0
 80003b4:	6078      	str	r0, [r7, #4]
	return -1;
 80003b6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003ba:	4618      	mov	r0, r3
 80003bc:	370c      	adds	r7, #12
 80003be:	46bd      	mov	sp, r7
 80003c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c4:	4770      	bx	lr

080003c6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003c6:	b480      	push	{r7}
 80003c8:	b083      	sub	sp, #12
 80003ca:	af00      	add	r7, sp, #0
 80003cc:	6078      	str	r0, [r7, #4]
 80003ce:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80003d0:	683b      	ldr	r3, [r7, #0]
 80003d2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003d6:	605a      	str	r2, [r3, #4]
	return 0;
 80003d8:	2300      	movs	r3, #0
}
 80003da:	4618      	mov	r0, r3
 80003dc:	370c      	adds	r7, #12
 80003de:	46bd      	mov	sp, r7
 80003e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e4:	4770      	bx	lr

080003e6 <_isatty>:

int _isatty(int file)
{
 80003e6:	b480      	push	{r7}
 80003e8:	b083      	sub	sp, #12
 80003ea:	af00      	add	r7, sp, #0
 80003ec:	6078      	str	r0, [r7, #4]
	return 1;
 80003ee:	2301      	movs	r3, #1
}
 80003f0:	4618      	mov	r0, r3
 80003f2:	370c      	adds	r7, #12
 80003f4:	46bd      	mov	sp, r7
 80003f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003fa:	4770      	bx	lr

080003fc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003fc:	b480      	push	{r7}
 80003fe:	b085      	sub	sp, #20
 8000400:	af00      	add	r7, sp, #0
 8000402:	60f8      	str	r0, [r7, #12]
 8000404:	60b9      	str	r1, [r7, #8]
 8000406:	607a      	str	r2, [r7, #4]
	return 0;
 8000408:	2300      	movs	r3, #0
}
 800040a:	4618      	mov	r0, r3
 800040c:	3714      	adds	r7, #20
 800040e:	46bd      	mov	sp, r7
 8000410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000414:	4770      	bx	lr
	...

08000418 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000418:	b580      	push	{r7, lr}
 800041a:	b086      	sub	sp, #24
 800041c:	af00      	add	r7, sp, #0
 800041e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000420:	4a14      	ldr	r2, [pc, #80]	; (8000474 <_sbrk+0x5c>)
 8000422:	4b15      	ldr	r3, [pc, #84]	; (8000478 <_sbrk+0x60>)
 8000424:	1ad3      	subs	r3, r2, r3
 8000426:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000428:	697b      	ldr	r3, [r7, #20]
 800042a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800042c:	4b13      	ldr	r3, [pc, #76]	; (800047c <_sbrk+0x64>)
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	2b00      	cmp	r3, #0
 8000432:	d102      	bne.n	800043a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000434:	4b11      	ldr	r3, [pc, #68]	; (800047c <_sbrk+0x64>)
 8000436:	4a12      	ldr	r2, [pc, #72]	; (8000480 <_sbrk+0x68>)
 8000438:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800043a:	4b10      	ldr	r3, [pc, #64]	; (800047c <_sbrk+0x64>)
 800043c:	681a      	ldr	r2, [r3, #0]
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	4413      	add	r3, r2
 8000442:	693a      	ldr	r2, [r7, #16]
 8000444:	429a      	cmp	r2, r3
 8000446:	d207      	bcs.n	8000458 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000448:	f000 f846 	bl	80004d8 <__errno>
 800044c:	4603      	mov	r3, r0
 800044e:	220c      	movs	r2, #12
 8000450:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000452:	f04f 33ff 	mov.w	r3, #4294967295
 8000456:	e009      	b.n	800046c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000458:	4b08      	ldr	r3, [pc, #32]	; (800047c <_sbrk+0x64>)
 800045a:	681b      	ldr	r3, [r3, #0]
 800045c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800045e:	4b07      	ldr	r3, [pc, #28]	; (800047c <_sbrk+0x64>)
 8000460:	681a      	ldr	r2, [r3, #0]
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	4413      	add	r3, r2
 8000466:	4a05      	ldr	r2, [pc, #20]	; (800047c <_sbrk+0x64>)
 8000468:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800046a:	68fb      	ldr	r3, [r7, #12]
}
 800046c:	4618      	mov	r0, r3
 800046e:	3718      	adds	r7, #24
 8000470:	46bd      	mov	sp, r7
 8000472:	bd80      	pop	{r7, pc}
 8000474:	20020000 	.word	0x20020000
 8000478:	00000400 	.word	0x00000400
 800047c:	20000080 	.word	0x20000080
 8000480:	200000a0 	.word	0x200000a0

08000484 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000484:	480d      	ldr	r0, [pc, #52]	; (80004bc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000486:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000488:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800048c:	480c      	ldr	r0, [pc, #48]	; (80004c0 <LoopForever+0x6>)
  ldr r1, =_edata
 800048e:	490d      	ldr	r1, [pc, #52]	; (80004c4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000490:	4a0d      	ldr	r2, [pc, #52]	; (80004c8 <LoopForever+0xe>)
  movs r3, #0
 8000492:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000494:	e002      	b.n	800049c <LoopCopyDataInit>

08000496 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000496:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000498:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800049a:	3304      	adds	r3, #4

0800049c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800049c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800049e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004a0:	d3f9      	bcc.n	8000496 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004a2:	4a0a      	ldr	r2, [pc, #40]	; (80004cc <LoopForever+0x12>)
  ldr r4, =_ebss
 80004a4:	4c0a      	ldr	r4, [pc, #40]	; (80004d0 <LoopForever+0x16>)
  movs r3, #0
 80004a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004a8:	e001      	b.n	80004ae <LoopFillZerobss>

080004aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004ac:	3204      	adds	r2, #4

080004ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004b0:	d3fb      	bcc.n	80004aa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004b2:	f000 f817 	bl	80004e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004b6:	f7ff feeb 	bl	8000290 <main>

080004ba <LoopForever>:

LoopForever:
    b LoopForever
 80004ba:	e7fe      	b.n	80004ba <LoopForever>
  ldr   r0, =_estack
 80004bc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004c0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004c4:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80004c8:	08001518 	.word	0x08001518
  ldr r2, =_sbss
 80004cc:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80004d0:	2000009c 	.word	0x2000009c

080004d4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004d4:	e7fe      	b.n	80004d4 <ADC_IRQHandler>
	...

080004d8 <__errno>:
 80004d8:	4b01      	ldr	r3, [pc, #4]	; (80004e0 <__errno+0x8>)
 80004da:	6818      	ldr	r0, [r3, #0]
 80004dc:	4770      	bx	lr
 80004de:	bf00      	nop
 80004e0:	20000000 	.word	0x20000000

080004e4 <__libc_init_array>:
 80004e4:	b570      	push	{r4, r5, r6, lr}
 80004e6:	4d0d      	ldr	r5, [pc, #52]	; (800051c <__libc_init_array+0x38>)
 80004e8:	4c0d      	ldr	r4, [pc, #52]	; (8000520 <__libc_init_array+0x3c>)
 80004ea:	1b64      	subs	r4, r4, r5
 80004ec:	10a4      	asrs	r4, r4, #2
 80004ee:	2600      	movs	r6, #0
 80004f0:	42a6      	cmp	r6, r4
 80004f2:	d109      	bne.n	8000508 <__libc_init_array+0x24>
 80004f4:	4d0b      	ldr	r5, [pc, #44]	; (8000524 <__libc_init_array+0x40>)
 80004f6:	4c0c      	ldr	r4, [pc, #48]	; (8000528 <__libc_init_array+0x44>)
 80004f8:	f000 ff76 	bl	80013e8 <_init>
 80004fc:	1b64      	subs	r4, r4, r5
 80004fe:	10a4      	asrs	r4, r4, #2
 8000500:	2600      	movs	r6, #0
 8000502:	42a6      	cmp	r6, r4
 8000504:	d105      	bne.n	8000512 <__libc_init_array+0x2e>
 8000506:	bd70      	pop	{r4, r5, r6, pc}
 8000508:	f855 3b04 	ldr.w	r3, [r5], #4
 800050c:	4798      	blx	r3
 800050e:	3601      	adds	r6, #1
 8000510:	e7ee      	b.n	80004f0 <__libc_init_array+0xc>
 8000512:	f855 3b04 	ldr.w	r3, [r5], #4
 8000516:	4798      	blx	r3
 8000518:	3601      	adds	r6, #1
 800051a:	e7f2      	b.n	8000502 <__libc_init_array+0x1e>
 800051c:	08001510 	.word	0x08001510
 8000520:	08001510 	.word	0x08001510
 8000524:	08001510 	.word	0x08001510
 8000528:	08001514 	.word	0x08001514

0800052c <memset>:
 800052c:	4402      	add	r2, r0
 800052e:	4603      	mov	r3, r0
 8000530:	4293      	cmp	r3, r2
 8000532:	d100      	bne.n	8000536 <memset+0xa>
 8000534:	4770      	bx	lr
 8000536:	f803 1b01 	strb.w	r1, [r3], #1
 800053a:	e7f9      	b.n	8000530 <memset+0x4>

0800053c <iprintf>:
 800053c:	b40f      	push	{r0, r1, r2, r3}
 800053e:	4b0a      	ldr	r3, [pc, #40]	; (8000568 <iprintf+0x2c>)
 8000540:	b513      	push	{r0, r1, r4, lr}
 8000542:	681c      	ldr	r4, [r3, #0]
 8000544:	b124      	cbz	r4, 8000550 <iprintf+0x14>
 8000546:	69a3      	ldr	r3, [r4, #24]
 8000548:	b913      	cbnz	r3, 8000550 <iprintf+0x14>
 800054a:	4620      	mov	r0, r4
 800054c:	f000 f866 	bl	800061c <__sinit>
 8000550:	ab05      	add	r3, sp, #20
 8000552:	9a04      	ldr	r2, [sp, #16]
 8000554:	68a1      	ldr	r1, [r4, #8]
 8000556:	9301      	str	r3, [sp, #4]
 8000558:	4620      	mov	r0, r4
 800055a:	f000 f983 	bl	8000864 <_vfiprintf_r>
 800055e:	b002      	add	sp, #8
 8000560:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000564:	b004      	add	sp, #16
 8000566:	4770      	bx	lr
 8000568:	20000000 	.word	0x20000000

0800056c <std>:
 800056c:	2300      	movs	r3, #0
 800056e:	b510      	push	{r4, lr}
 8000570:	4604      	mov	r4, r0
 8000572:	e9c0 3300 	strd	r3, r3, [r0]
 8000576:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800057a:	6083      	str	r3, [r0, #8]
 800057c:	8181      	strh	r1, [r0, #12]
 800057e:	6643      	str	r3, [r0, #100]	; 0x64
 8000580:	81c2      	strh	r2, [r0, #14]
 8000582:	6183      	str	r3, [r0, #24]
 8000584:	4619      	mov	r1, r3
 8000586:	2208      	movs	r2, #8
 8000588:	305c      	adds	r0, #92	; 0x5c
 800058a:	f7ff ffcf 	bl	800052c <memset>
 800058e:	4b05      	ldr	r3, [pc, #20]	; (80005a4 <std+0x38>)
 8000590:	6263      	str	r3, [r4, #36]	; 0x24
 8000592:	4b05      	ldr	r3, [pc, #20]	; (80005a8 <std+0x3c>)
 8000594:	62a3      	str	r3, [r4, #40]	; 0x28
 8000596:	4b05      	ldr	r3, [pc, #20]	; (80005ac <std+0x40>)
 8000598:	62e3      	str	r3, [r4, #44]	; 0x2c
 800059a:	4b05      	ldr	r3, [pc, #20]	; (80005b0 <std+0x44>)
 800059c:	6224      	str	r4, [r4, #32]
 800059e:	6323      	str	r3, [r4, #48]	; 0x30
 80005a0:	bd10      	pop	{r4, pc}
 80005a2:	bf00      	nop
 80005a4:	08000e0d 	.word	0x08000e0d
 80005a8:	08000e2f 	.word	0x08000e2f
 80005ac:	08000e67 	.word	0x08000e67
 80005b0:	08000e8b 	.word	0x08000e8b

080005b4 <_cleanup_r>:
 80005b4:	4901      	ldr	r1, [pc, #4]	; (80005bc <_cleanup_r+0x8>)
 80005b6:	f000 b8af 	b.w	8000718 <_fwalk_reent>
 80005ba:	bf00      	nop
 80005bc:	08001165 	.word	0x08001165

080005c0 <__sfmoreglue>:
 80005c0:	b570      	push	{r4, r5, r6, lr}
 80005c2:	1e4a      	subs	r2, r1, #1
 80005c4:	2568      	movs	r5, #104	; 0x68
 80005c6:	4355      	muls	r5, r2
 80005c8:	460e      	mov	r6, r1
 80005ca:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80005ce:	f000 f8c5 	bl	800075c <_malloc_r>
 80005d2:	4604      	mov	r4, r0
 80005d4:	b140      	cbz	r0, 80005e8 <__sfmoreglue+0x28>
 80005d6:	2100      	movs	r1, #0
 80005d8:	e9c0 1600 	strd	r1, r6, [r0]
 80005dc:	300c      	adds	r0, #12
 80005de:	60a0      	str	r0, [r4, #8]
 80005e0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80005e4:	f7ff ffa2 	bl	800052c <memset>
 80005e8:	4620      	mov	r0, r4
 80005ea:	bd70      	pop	{r4, r5, r6, pc}

080005ec <__sfp_lock_acquire>:
 80005ec:	4801      	ldr	r0, [pc, #4]	; (80005f4 <__sfp_lock_acquire+0x8>)
 80005ee:	f000 b8b3 	b.w	8000758 <__retarget_lock_acquire_recursive>
 80005f2:	bf00      	nop
 80005f4:	20000094 	.word	0x20000094

080005f8 <__sfp_lock_release>:
 80005f8:	4801      	ldr	r0, [pc, #4]	; (8000600 <__sfp_lock_release+0x8>)
 80005fa:	f000 b8ae 	b.w	800075a <__retarget_lock_release_recursive>
 80005fe:	bf00      	nop
 8000600:	20000094 	.word	0x20000094

08000604 <__sinit_lock_acquire>:
 8000604:	4801      	ldr	r0, [pc, #4]	; (800060c <__sinit_lock_acquire+0x8>)
 8000606:	f000 b8a7 	b.w	8000758 <__retarget_lock_acquire_recursive>
 800060a:	bf00      	nop
 800060c:	2000008f 	.word	0x2000008f

08000610 <__sinit_lock_release>:
 8000610:	4801      	ldr	r0, [pc, #4]	; (8000618 <__sinit_lock_release+0x8>)
 8000612:	f000 b8a2 	b.w	800075a <__retarget_lock_release_recursive>
 8000616:	bf00      	nop
 8000618:	2000008f 	.word	0x2000008f

0800061c <__sinit>:
 800061c:	b510      	push	{r4, lr}
 800061e:	4604      	mov	r4, r0
 8000620:	f7ff fff0 	bl	8000604 <__sinit_lock_acquire>
 8000624:	69a3      	ldr	r3, [r4, #24]
 8000626:	b11b      	cbz	r3, 8000630 <__sinit+0x14>
 8000628:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800062c:	f7ff bff0 	b.w	8000610 <__sinit_lock_release>
 8000630:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000634:	6523      	str	r3, [r4, #80]	; 0x50
 8000636:	4b13      	ldr	r3, [pc, #76]	; (8000684 <__sinit+0x68>)
 8000638:	4a13      	ldr	r2, [pc, #76]	; (8000688 <__sinit+0x6c>)
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	62a2      	str	r2, [r4, #40]	; 0x28
 800063e:	42a3      	cmp	r3, r4
 8000640:	bf04      	itt	eq
 8000642:	2301      	moveq	r3, #1
 8000644:	61a3      	streq	r3, [r4, #24]
 8000646:	4620      	mov	r0, r4
 8000648:	f000 f820 	bl	800068c <__sfp>
 800064c:	6060      	str	r0, [r4, #4]
 800064e:	4620      	mov	r0, r4
 8000650:	f000 f81c 	bl	800068c <__sfp>
 8000654:	60a0      	str	r0, [r4, #8]
 8000656:	4620      	mov	r0, r4
 8000658:	f000 f818 	bl	800068c <__sfp>
 800065c:	2200      	movs	r2, #0
 800065e:	60e0      	str	r0, [r4, #12]
 8000660:	2104      	movs	r1, #4
 8000662:	6860      	ldr	r0, [r4, #4]
 8000664:	f7ff ff82 	bl	800056c <std>
 8000668:	68a0      	ldr	r0, [r4, #8]
 800066a:	2201      	movs	r2, #1
 800066c:	2109      	movs	r1, #9
 800066e:	f7ff ff7d 	bl	800056c <std>
 8000672:	68e0      	ldr	r0, [r4, #12]
 8000674:	2202      	movs	r2, #2
 8000676:	2112      	movs	r1, #18
 8000678:	f7ff ff78 	bl	800056c <std>
 800067c:	2301      	movs	r3, #1
 800067e:	61a3      	str	r3, [r4, #24]
 8000680:	e7d2      	b.n	8000628 <__sinit+0xc>
 8000682:	bf00      	nop
 8000684:	08001478 	.word	0x08001478
 8000688:	080005b5 	.word	0x080005b5

0800068c <__sfp>:
 800068c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800068e:	4607      	mov	r7, r0
 8000690:	f7ff ffac 	bl	80005ec <__sfp_lock_acquire>
 8000694:	4b1e      	ldr	r3, [pc, #120]	; (8000710 <__sfp+0x84>)
 8000696:	681e      	ldr	r6, [r3, #0]
 8000698:	69b3      	ldr	r3, [r6, #24]
 800069a:	b913      	cbnz	r3, 80006a2 <__sfp+0x16>
 800069c:	4630      	mov	r0, r6
 800069e:	f7ff ffbd 	bl	800061c <__sinit>
 80006a2:	3648      	adds	r6, #72	; 0x48
 80006a4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80006a8:	3b01      	subs	r3, #1
 80006aa:	d503      	bpl.n	80006b4 <__sfp+0x28>
 80006ac:	6833      	ldr	r3, [r6, #0]
 80006ae:	b30b      	cbz	r3, 80006f4 <__sfp+0x68>
 80006b0:	6836      	ldr	r6, [r6, #0]
 80006b2:	e7f7      	b.n	80006a4 <__sfp+0x18>
 80006b4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80006b8:	b9d5      	cbnz	r5, 80006f0 <__sfp+0x64>
 80006ba:	4b16      	ldr	r3, [pc, #88]	; (8000714 <__sfp+0x88>)
 80006bc:	60e3      	str	r3, [r4, #12]
 80006be:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80006c2:	6665      	str	r5, [r4, #100]	; 0x64
 80006c4:	f000 f847 	bl	8000756 <__retarget_lock_init_recursive>
 80006c8:	f7ff ff96 	bl	80005f8 <__sfp_lock_release>
 80006cc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80006d0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80006d4:	6025      	str	r5, [r4, #0]
 80006d6:	61a5      	str	r5, [r4, #24]
 80006d8:	2208      	movs	r2, #8
 80006da:	4629      	mov	r1, r5
 80006dc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80006e0:	f7ff ff24 	bl	800052c <memset>
 80006e4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80006e8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80006ec:	4620      	mov	r0, r4
 80006ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006f0:	3468      	adds	r4, #104	; 0x68
 80006f2:	e7d9      	b.n	80006a8 <__sfp+0x1c>
 80006f4:	2104      	movs	r1, #4
 80006f6:	4638      	mov	r0, r7
 80006f8:	f7ff ff62 	bl	80005c0 <__sfmoreglue>
 80006fc:	4604      	mov	r4, r0
 80006fe:	6030      	str	r0, [r6, #0]
 8000700:	2800      	cmp	r0, #0
 8000702:	d1d5      	bne.n	80006b0 <__sfp+0x24>
 8000704:	f7ff ff78 	bl	80005f8 <__sfp_lock_release>
 8000708:	230c      	movs	r3, #12
 800070a:	603b      	str	r3, [r7, #0]
 800070c:	e7ee      	b.n	80006ec <__sfp+0x60>
 800070e:	bf00      	nop
 8000710:	08001478 	.word	0x08001478
 8000714:	ffff0001 	.word	0xffff0001

08000718 <_fwalk_reent>:
 8000718:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800071c:	4606      	mov	r6, r0
 800071e:	4688      	mov	r8, r1
 8000720:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000724:	2700      	movs	r7, #0
 8000726:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800072a:	f1b9 0901 	subs.w	r9, r9, #1
 800072e:	d505      	bpl.n	800073c <_fwalk_reent+0x24>
 8000730:	6824      	ldr	r4, [r4, #0]
 8000732:	2c00      	cmp	r4, #0
 8000734:	d1f7      	bne.n	8000726 <_fwalk_reent+0xe>
 8000736:	4638      	mov	r0, r7
 8000738:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800073c:	89ab      	ldrh	r3, [r5, #12]
 800073e:	2b01      	cmp	r3, #1
 8000740:	d907      	bls.n	8000752 <_fwalk_reent+0x3a>
 8000742:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000746:	3301      	adds	r3, #1
 8000748:	d003      	beq.n	8000752 <_fwalk_reent+0x3a>
 800074a:	4629      	mov	r1, r5
 800074c:	4630      	mov	r0, r6
 800074e:	47c0      	blx	r8
 8000750:	4307      	orrs	r7, r0
 8000752:	3568      	adds	r5, #104	; 0x68
 8000754:	e7e9      	b.n	800072a <_fwalk_reent+0x12>

08000756 <__retarget_lock_init_recursive>:
 8000756:	4770      	bx	lr

08000758 <__retarget_lock_acquire_recursive>:
 8000758:	4770      	bx	lr

0800075a <__retarget_lock_release_recursive>:
 800075a:	4770      	bx	lr

0800075c <_malloc_r>:
 800075c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800075e:	1ccd      	adds	r5, r1, #3
 8000760:	f025 0503 	bic.w	r5, r5, #3
 8000764:	3508      	adds	r5, #8
 8000766:	2d0c      	cmp	r5, #12
 8000768:	bf38      	it	cc
 800076a:	250c      	movcc	r5, #12
 800076c:	2d00      	cmp	r5, #0
 800076e:	4606      	mov	r6, r0
 8000770:	db01      	blt.n	8000776 <_malloc_r+0x1a>
 8000772:	42a9      	cmp	r1, r5
 8000774:	d903      	bls.n	800077e <_malloc_r+0x22>
 8000776:	230c      	movs	r3, #12
 8000778:	6033      	str	r3, [r6, #0]
 800077a:	2000      	movs	r0, #0
 800077c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800077e:	f000 fda3 	bl	80012c8 <__malloc_lock>
 8000782:	4921      	ldr	r1, [pc, #132]	; (8000808 <_malloc_r+0xac>)
 8000784:	680a      	ldr	r2, [r1, #0]
 8000786:	4614      	mov	r4, r2
 8000788:	b99c      	cbnz	r4, 80007b2 <_malloc_r+0x56>
 800078a:	4f20      	ldr	r7, [pc, #128]	; (800080c <_malloc_r+0xb0>)
 800078c:	683b      	ldr	r3, [r7, #0]
 800078e:	b923      	cbnz	r3, 800079a <_malloc_r+0x3e>
 8000790:	4621      	mov	r1, r4
 8000792:	4630      	mov	r0, r6
 8000794:	f000 fb2a 	bl	8000dec <_sbrk_r>
 8000798:	6038      	str	r0, [r7, #0]
 800079a:	4629      	mov	r1, r5
 800079c:	4630      	mov	r0, r6
 800079e:	f000 fb25 	bl	8000dec <_sbrk_r>
 80007a2:	1c43      	adds	r3, r0, #1
 80007a4:	d123      	bne.n	80007ee <_malloc_r+0x92>
 80007a6:	230c      	movs	r3, #12
 80007a8:	6033      	str	r3, [r6, #0]
 80007aa:	4630      	mov	r0, r6
 80007ac:	f000 fd92 	bl	80012d4 <__malloc_unlock>
 80007b0:	e7e3      	b.n	800077a <_malloc_r+0x1e>
 80007b2:	6823      	ldr	r3, [r4, #0]
 80007b4:	1b5b      	subs	r3, r3, r5
 80007b6:	d417      	bmi.n	80007e8 <_malloc_r+0x8c>
 80007b8:	2b0b      	cmp	r3, #11
 80007ba:	d903      	bls.n	80007c4 <_malloc_r+0x68>
 80007bc:	6023      	str	r3, [r4, #0]
 80007be:	441c      	add	r4, r3
 80007c0:	6025      	str	r5, [r4, #0]
 80007c2:	e004      	b.n	80007ce <_malloc_r+0x72>
 80007c4:	6863      	ldr	r3, [r4, #4]
 80007c6:	42a2      	cmp	r2, r4
 80007c8:	bf0c      	ite	eq
 80007ca:	600b      	streq	r3, [r1, #0]
 80007cc:	6053      	strne	r3, [r2, #4]
 80007ce:	4630      	mov	r0, r6
 80007d0:	f000 fd80 	bl	80012d4 <__malloc_unlock>
 80007d4:	f104 000b 	add.w	r0, r4, #11
 80007d8:	1d23      	adds	r3, r4, #4
 80007da:	f020 0007 	bic.w	r0, r0, #7
 80007de:	1ac2      	subs	r2, r0, r3
 80007e0:	d0cc      	beq.n	800077c <_malloc_r+0x20>
 80007e2:	1a1b      	subs	r3, r3, r0
 80007e4:	50a3      	str	r3, [r4, r2]
 80007e6:	e7c9      	b.n	800077c <_malloc_r+0x20>
 80007e8:	4622      	mov	r2, r4
 80007ea:	6864      	ldr	r4, [r4, #4]
 80007ec:	e7cc      	b.n	8000788 <_malloc_r+0x2c>
 80007ee:	1cc4      	adds	r4, r0, #3
 80007f0:	f024 0403 	bic.w	r4, r4, #3
 80007f4:	42a0      	cmp	r0, r4
 80007f6:	d0e3      	beq.n	80007c0 <_malloc_r+0x64>
 80007f8:	1a21      	subs	r1, r4, r0
 80007fa:	4630      	mov	r0, r6
 80007fc:	f000 faf6 	bl	8000dec <_sbrk_r>
 8000800:	3001      	adds	r0, #1
 8000802:	d1dd      	bne.n	80007c0 <_malloc_r+0x64>
 8000804:	e7cf      	b.n	80007a6 <_malloc_r+0x4a>
 8000806:	bf00      	nop
 8000808:	20000084 	.word	0x20000084
 800080c:	20000088 	.word	0x20000088

08000810 <__sfputc_r>:
 8000810:	6893      	ldr	r3, [r2, #8]
 8000812:	3b01      	subs	r3, #1
 8000814:	2b00      	cmp	r3, #0
 8000816:	b410      	push	{r4}
 8000818:	6093      	str	r3, [r2, #8]
 800081a:	da08      	bge.n	800082e <__sfputc_r+0x1e>
 800081c:	6994      	ldr	r4, [r2, #24]
 800081e:	42a3      	cmp	r3, r4
 8000820:	db01      	blt.n	8000826 <__sfputc_r+0x16>
 8000822:	290a      	cmp	r1, #10
 8000824:	d103      	bne.n	800082e <__sfputc_r+0x1e>
 8000826:	f85d 4b04 	ldr.w	r4, [sp], #4
 800082a:	f000 bb33 	b.w	8000e94 <__swbuf_r>
 800082e:	6813      	ldr	r3, [r2, #0]
 8000830:	1c58      	adds	r0, r3, #1
 8000832:	6010      	str	r0, [r2, #0]
 8000834:	7019      	strb	r1, [r3, #0]
 8000836:	4608      	mov	r0, r1
 8000838:	f85d 4b04 	ldr.w	r4, [sp], #4
 800083c:	4770      	bx	lr

0800083e <__sfputs_r>:
 800083e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000840:	4606      	mov	r6, r0
 8000842:	460f      	mov	r7, r1
 8000844:	4614      	mov	r4, r2
 8000846:	18d5      	adds	r5, r2, r3
 8000848:	42ac      	cmp	r4, r5
 800084a:	d101      	bne.n	8000850 <__sfputs_r+0x12>
 800084c:	2000      	movs	r0, #0
 800084e:	e007      	b.n	8000860 <__sfputs_r+0x22>
 8000850:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000854:	463a      	mov	r2, r7
 8000856:	4630      	mov	r0, r6
 8000858:	f7ff ffda 	bl	8000810 <__sfputc_r>
 800085c:	1c43      	adds	r3, r0, #1
 800085e:	d1f3      	bne.n	8000848 <__sfputs_r+0xa>
 8000860:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000864 <_vfiprintf_r>:
 8000864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000868:	460d      	mov	r5, r1
 800086a:	b09d      	sub	sp, #116	; 0x74
 800086c:	4614      	mov	r4, r2
 800086e:	4698      	mov	r8, r3
 8000870:	4606      	mov	r6, r0
 8000872:	b118      	cbz	r0, 800087c <_vfiprintf_r+0x18>
 8000874:	6983      	ldr	r3, [r0, #24]
 8000876:	b90b      	cbnz	r3, 800087c <_vfiprintf_r+0x18>
 8000878:	f7ff fed0 	bl	800061c <__sinit>
 800087c:	4b89      	ldr	r3, [pc, #548]	; (8000aa4 <_vfiprintf_r+0x240>)
 800087e:	429d      	cmp	r5, r3
 8000880:	d11b      	bne.n	80008ba <_vfiprintf_r+0x56>
 8000882:	6875      	ldr	r5, [r6, #4]
 8000884:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000886:	07d9      	lsls	r1, r3, #31
 8000888:	d405      	bmi.n	8000896 <_vfiprintf_r+0x32>
 800088a:	89ab      	ldrh	r3, [r5, #12]
 800088c:	059a      	lsls	r2, r3, #22
 800088e:	d402      	bmi.n	8000896 <_vfiprintf_r+0x32>
 8000890:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000892:	f7ff ff61 	bl	8000758 <__retarget_lock_acquire_recursive>
 8000896:	89ab      	ldrh	r3, [r5, #12]
 8000898:	071b      	lsls	r3, r3, #28
 800089a:	d501      	bpl.n	80008a0 <_vfiprintf_r+0x3c>
 800089c:	692b      	ldr	r3, [r5, #16]
 800089e:	b9eb      	cbnz	r3, 80008dc <_vfiprintf_r+0x78>
 80008a0:	4629      	mov	r1, r5
 80008a2:	4630      	mov	r0, r6
 80008a4:	f000 fb5a 	bl	8000f5c <__swsetup_r>
 80008a8:	b1c0      	cbz	r0, 80008dc <_vfiprintf_r+0x78>
 80008aa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80008ac:	07dc      	lsls	r4, r3, #31
 80008ae:	d50e      	bpl.n	80008ce <_vfiprintf_r+0x6a>
 80008b0:	f04f 30ff 	mov.w	r0, #4294967295
 80008b4:	b01d      	add	sp, #116	; 0x74
 80008b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80008ba:	4b7b      	ldr	r3, [pc, #492]	; (8000aa8 <_vfiprintf_r+0x244>)
 80008bc:	429d      	cmp	r5, r3
 80008be:	d101      	bne.n	80008c4 <_vfiprintf_r+0x60>
 80008c0:	68b5      	ldr	r5, [r6, #8]
 80008c2:	e7df      	b.n	8000884 <_vfiprintf_r+0x20>
 80008c4:	4b79      	ldr	r3, [pc, #484]	; (8000aac <_vfiprintf_r+0x248>)
 80008c6:	429d      	cmp	r5, r3
 80008c8:	bf08      	it	eq
 80008ca:	68f5      	ldreq	r5, [r6, #12]
 80008cc:	e7da      	b.n	8000884 <_vfiprintf_r+0x20>
 80008ce:	89ab      	ldrh	r3, [r5, #12]
 80008d0:	0598      	lsls	r0, r3, #22
 80008d2:	d4ed      	bmi.n	80008b0 <_vfiprintf_r+0x4c>
 80008d4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80008d6:	f7ff ff40 	bl	800075a <__retarget_lock_release_recursive>
 80008da:	e7e9      	b.n	80008b0 <_vfiprintf_r+0x4c>
 80008dc:	2300      	movs	r3, #0
 80008de:	9309      	str	r3, [sp, #36]	; 0x24
 80008e0:	2320      	movs	r3, #32
 80008e2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80008e6:	f8cd 800c 	str.w	r8, [sp, #12]
 80008ea:	2330      	movs	r3, #48	; 0x30
 80008ec:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000ab0 <_vfiprintf_r+0x24c>
 80008f0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80008f4:	f04f 0901 	mov.w	r9, #1
 80008f8:	4623      	mov	r3, r4
 80008fa:	469a      	mov	sl, r3
 80008fc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000900:	b10a      	cbz	r2, 8000906 <_vfiprintf_r+0xa2>
 8000902:	2a25      	cmp	r2, #37	; 0x25
 8000904:	d1f9      	bne.n	80008fa <_vfiprintf_r+0x96>
 8000906:	ebba 0b04 	subs.w	fp, sl, r4
 800090a:	d00b      	beq.n	8000924 <_vfiprintf_r+0xc0>
 800090c:	465b      	mov	r3, fp
 800090e:	4622      	mov	r2, r4
 8000910:	4629      	mov	r1, r5
 8000912:	4630      	mov	r0, r6
 8000914:	f7ff ff93 	bl	800083e <__sfputs_r>
 8000918:	3001      	adds	r0, #1
 800091a:	f000 80aa 	beq.w	8000a72 <_vfiprintf_r+0x20e>
 800091e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000920:	445a      	add	r2, fp
 8000922:	9209      	str	r2, [sp, #36]	; 0x24
 8000924:	f89a 3000 	ldrb.w	r3, [sl]
 8000928:	2b00      	cmp	r3, #0
 800092a:	f000 80a2 	beq.w	8000a72 <_vfiprintf_r+0x20e>
 800092e:	2300      	movs	r3, #0
 8000930:	f04f 32ff 	mov.w	r2, #4294967295
 8000934:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000938:	f10a 0a01 	add.w	sl, sl, #1
 800093c:	9304      	str	r3, [sp, #16]
 800093e:	9307      	str	r3, [sp, #28]
 8000940:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000944:	931a      	str	r3, [sp, #104]	; 0x68
 8000946:	4654      	mov	r4, sl
 8000948:	2205      	movs	r2, #5
 800094a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800094e:	4858      	ldr	r0, [pc, #352]	; (8000ab0 <_vfiprintf_r+0x24c>)
 8000950:	f7ff fc4e 	bl	80001f0 <memchr>
 8000954:	9a04      	ldr	r2, [sp, #16]
 8000956:	b9d8      	cbnz	r0, 8000990 <_vfiprintf_r+0x12c>
 8000958:	06d1      	lsls	r1, r2, #27
 800095a:	bf44      	itt	mi
 800095c:	2320      	movmi	r3, #32
 800095e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000962:	0713      	lsls	r3, r2, #28
 8000964:	bf44      	itt	mi
 8000966:	232b      	movmi	r3, #43	; 0x2b
 8000968:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800096c:	f89a 3000 	ldrb.w	r3, [sl]
 8000970:	2b2a      	cmp	r3, #42	; 0x2a
 8000972:	d015      	beq.n	80009a0 <_vfiprintf_r+0x13c>
 8000974:	9a07      	ldr	r2, [sp, #28]
 8000976:	4654      	mov	r4, sl
 8000978:	2000      	movs	r0, #0
 800097a:	f04f 0c0a 	mov.w	ip, #10
 800097e:	4621      	mov	r1, r4
 8000980:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000984:	3b30      	subs	r3, #48	; 0x30
 8000986:	2b09      	cmp	r3, #9
 8000988:	d94e      	bls.n	8000a28 <_vfiprintf_r+0x1c4>
 800098a:	b1b0      	cbz	r0, 80009ba <_vfiprintf_r+0x156>
 800098c:	9207      	str	r2, [sp, #28]
 800098e:	e014      	b.n	80009ba <_vfiprintf_r+0x156>
 8000990:	eba0 0308 	sub.w	r3, r0, r8
 8000994:	fa09 f303 	lsl.w	r3, r9, r3
 8000998:	4313      	orrs	r3, r2
 800099a:	9304      	str	r3, [sp, #16]
 800099c:	46a2      	mov	sl, r4
 800099e:	e7d2      	b.n	8000946 <_vfiprintf_r+0xe2>
 80009a0:	9b03      	ldr	r3, [sp, #12]
 80009a2:	1d19      	adds	r1, r3, #4
 80009a4:	681b      	ldr	r3, [r3, #0]
 80009a6:	9103      	str	r1, [sp, #12]
 80009a8:	2b00      	cmp	r3, #0
 80009aa:	bfbb      	ittet	lt
 80009ac:	425b      	neglt	r3, r3
 80009ae:	f042 0202 	orrlt.w	r2, r2, #2
 80009b2:	9307      	strge	r3, [sp, #28]
 80009b4:	9307      	strlt	r3, [sp, #28]
 80009b6:	bfb8      	it	lt
 80009b8:	9204      	strlt	r2, [sp, #16]
 80009ba:	7823      	ldrb	r3, [r4, #0]
 80009bc:	2b2e      	cmp	r3, #46	; 0x2e
 80009be:	d10c      	bne.n	80009da <_vfiprintf_r+0x176>
 80009c0:	7863      	ldrb	r3, [r4, #1]
 80009c2:	2b2a      	cmp	r3, #42	; 0x2a
 80009c4:	d135      	bne.n	8000a32 <_vfiprintf_r+0x1ce>
 80009c6:	9b03      	ldr	r3, [sp, #12]
 80009c8:	1d1a      	adds	r2, r3, #4
 80009ca:	681b      	ldr	r3, [r3, #0]
 80009cc:	9203      	str	r2, [sp, #12]
 80009ce:	2b00      	cmp	r3, #0
 80009d0:	bfb8      	it	lt
 80009d2:	f04f 33ff 	movlt.w	r3, #4294967295
 80009d6:	3402      	adds	r4, #2
 80009d8:	9305      	str	r3, [sp, #20]
 80009da:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000ac0 <_vfiprintf_r+0x25c>
 80009de:	7821      	ldrb	r1, [r4, #0]
 80009e0:	2203      	movs	r2, #3
 80009e2:	4650      	mov	r0, sl
 80009e4:	f7ff fc04 	bl	80001f0 <memchr>
 80009e8:	b140      	cbz	r0, 80009fc <_vfiprintf_r+0x198>
 80009ea:	2340      	movs	r3, #64	; 0x40
 80009ec:	eba0 000a 	sub.w	r0, r0, sl
 80009f0:	fa03 f000 	lsl.w	r0, r3, r0
 80009f4:	9b04      	ldr	r3, [sp, #16]
 80009f6:	4303      	orrs	r3, r0
 80009f8:	3401      	adds	r4, #1
 80009fa:	9304      	str	r3, [sp, #16]
 80009fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a00:	482c      	ldr	r0, [pc, #176]	; (8000ab4 <_vfiprintf_r+0x250>)
 8000a02:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000a06:	2206      	movs	r2, #6
 8000a08:	f7ff fbf2 	bl	80001f0 <memchr>
 8000a0c:	2800      	cmp	r0, #0
 8000a0e:	d03f      	beq.n	8000a90 <_vfiprintf_r+0x22c>
 8000a10:	4b29      	ldr	r3, [pc, #164]	; (8000ab8 <_vfiprintf_r+0x254>)
 8000a12:	bb1b      	cbnz	r3, 8000a5c <_vfiprintf_r+0x1f8>
 8000a14:	9b03      	ldr	r3, [sp, #12]
 8000a16:	3307      	adds	r3, #7
 8000a18:	f023 0307 	bic.w	r3, r3, #7
 8000a1c:	3308      	adds	r3, #8
 8000a1e:	9303      	str	r3, [sp, #12]
 8000a20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000a22:	443b      	add	r3, r7
 8000a24:	9309      	str	r3, [sp, #36]	; 0x24
 8000a26:	e767      	b.n	80008f8 <_vfiprintf_r+0x94>
 8000a28:	fb0c 3202 	mla	r2, ip, r2, r3
 8000a2c:	460c      	mov	r4, r1
 8000a2e:	2001      	movs	r0, #1
 8000a30:	e7a5      	b.n	800097e <_vfiprintf_r+0x11a>
 8000a32:	2300      	movs	r3, #0
 8000a34:	3401      	adds	r4, #1
 8000a36:	9305      	str	r3, [sp, #20]
 8000a38:	4619      	mov	r1, r3
 8000a3a:	f04f 0c0a 	mov.w	ip, #10
 8000a3e:	4620      	mov	r0, r4
 8000a40:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000a44:	3a30      	subs	r2, #48	; 0x30
 8000a46:	2a09      	cmp	r2, #9
 8000a48:	d903      	bls.n	8000a52 <_vfiprintf_r+0x1ee>
 8000a4a:	2b00      	cmp	r3, #0
 8000a4c:	d0c5      	beq.n	80009da <_vfiprintf_r+0x176>
 8000a4e:	9105      	str	r1, [sp, #20]
 8000a50:	e7c3      	b.n	80009da <_vfiprintf_r+0x176>
 8000a52:	fb0c 2101 	mla	r1, ip, r1, r2
 8000a56:	4604      	mov	r4, r0
 8000a58:	2301      	movs	r3, #1
 8000a5a:	e7f0      	b.n	8000a3e <_vfiprintf_r+0x1da>
 8000a5c:	ab03      	add	r3, sp, #12
 8000a5e:	9300      	str	r3, [sp, #0]
 8000a60:	462a      	mov	r2, r5
 8000a62:	4b16      	ldr	r3, [pc, #88]	; (8000abc <_vfiprintf_r+0x258>)
 8000a64:	a904      	add	r1, sp, #16
 8000a66:	4630      	mov	r0, r6
 8000a68:	f3af 8000 	nop.w
 8000a6c:	4607      	mov	r7, r0
 8000a6e:	1c78      	adds	r0, r7, #1
 8000a70:	d1d6      	bne.n	8000a20 <_vfiprintf_r+0x1bc>
 8000a72:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a74:	07d9      	lsls	r1, r3, #31
 8000a76:	d405      	bmi.n	8000a84 <_vfiprintf_r+0x220>
 8000a78:	89ab      	ldrh	r3, [r5, #12]
 8000a7a:	059a      	lsls	r2, r3, #22
 8000a7c:	d402      	bmi.n	8000a84 <_vfiprintf_r+0x220>
 8000a7e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a80:	f7ff fe6b 	bl	800075a <__retarget_lock_release_recursive>
 8000a84:	89ab      	ldrh	r3, [r5, #12]
 8000a86:	065b      	lsls	r3, r3, #25
 8000a88:	f53f af12 	bmi.w	80008b0 <_vfiprintf_r+0x4c>
 8000a8c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000a8e:	e711      	b.n	80008b4 <_vfiprintf_r+0x50>
 8000a90:	ab03      	add	r3, sp, #12
 8000a92:	9300      	str	r3, [sp, #0]
 8000a94:	462a      	mov	r2, r5
 8000a96:	4b09      	ldr	r3, [pc, #36]	; (8000abc <_vfiprintf_r+0x258>)
 8000a98:	a904      	add	r1, sp, #16
 8000a9a:	4630      	mov	r0, r6
 8000a9c:	f000 f880 	bl	8000ba0 <_printf_i>
 8000aa0:	e7e4      	b.n	8000a6c <_vfiprintf_r+0x208>
 8000aa2:	bf00      	nop
 8000aa4:	0800149c 	.word	0x0800149c
 8000aa8:	080014bc 	.word	0x080014bc
 8000aac:	0800147c 	.word	0x0800147c
 8000ab0:	080014dc 	.word	0x080014dc
 8000ab4:	080014e6 	.word	0x080014e6
 8000ab8:	00000000 	.word	0x00000000
 8000abc:	0800083f 	.word	0x0800083f
 8000ac0:	080014e2 	.word	0x080014e2

08000ac4 <_printf_common>:
 8000ac4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ac8:	4616      	mov	r6, r2
 8000aca:	4699      	mov	r9, r3
 8000acc:	688a      	ldr	r2, [r1, #8]
 8000ace:	690b      	ldr	r3, [r1, #16]
 8000ad0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000ad4:	4293      	cmp	r3, r2
 8000ad6:	bfb8      	it	lt
 8000ad8:	4613      	movlt	r3, r2
 8000ada:	6033      	str	r3, [r6, #0]
 8000adc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000ae0:	4607      	mov	r7, r0
 8000ae2:	460c      	mov	r4, r1
 8000ae4:	b10a      	cbz	r2, 8000aea <_printf_common+0x26>
 8000ae6:	3301      	adds	r3, #1
 8000ae8:	6033      	str	r3, [r6, #0]
 8000aea:	6823      	ldr	r3, [r4, #0]
 8000aec:	0699      	lsls	r1, r3, #26
 8000aee:	bf42      	ittt	mi
 8000af0:	6833      	ldrmi	r3, [r6, #0]
 8000af2:	3302      	addmi	r3, #2
 8000af4:	6033      	strmi	r3, [r6, #0]
 8000af6:	6825      	ldr	r5, [r4, #0]
 8000af8:	f015 0506 	ands.w	r5, r5, #6
 8000afc:	d106      	bne.n	8000b0c <_printf_common+0x48>
 8000afe:	f104 0a19 	add.w	sl, r4, #25
 8000b02:	68e3      	ldr	r3, [r4, #12]
 8000b04:	6832      	ldr	r2, [r6, #0]
 8000b06:	1a9b      	subs	r3, r3, r2
 8000b08:	42ab      	cmp	r3, r5
 8000b0a:	dc26      	bgt.n	8000b5a <_printf_common+0x96>
 8000b0c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000b10:	1e13      	subs	r3, r2, #0
 8000b12:	6822      	ldr	r2, [r4, #0]
 8000b14:	bf18      	it	ne
 8000b16:	2301      	movne	r3, #1
 8000b18:	0692      	lsls	r2, r2, #26
 8000b1a:	d42b      	bmi.n	8000b74 <_printf_common+0xb0>
 8000b1c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000b20:	4649      	mov	r1, r9
 8000b22:	4638      	mov	r0, r7
 8000b24:	47c0      	blx	r8
 8000b26:	3001      	adds	r0, #1
 8000b28:	d01e      	beq.n	8000b68 <_printf_common+0xa4>
 8000b2a:	6823      	ldr	r3, [r4, #0]
 8000b2c:	68e5      	ldr	r5, [r4, #12]
 8000b2e:	6832      	ldr	r2, [r6, #0]
 8000b30:	f003 0306 	and.w	r3, r3, #6
 8000b34:	2b04      	cmp	r3, #4
 8000b36:	bf08      	it	eq
 8000b38:	1aad      	subeq	r5, r5, r2
 8000b3a:	68a3      	ldr	r3, [r4, #8]
 8000b3c:	6922      	ldr	r2, [r4, #16]
 8000b3e:	bf0c      	ite	eq
 8000b40:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000b44:	2500      	movne	r5, #0
 8000b46:	4293      	cmp	r3, r2
 8000b48:	bfc4      	itt	gt
 8000b4a:	1a9b      	subgt	r3, r3, r2
 8000b4c:	18ed      	addgt	r5, r5, r3
 8000b4e:	2600      	movs	r6, #0
 8000b50:	341a      	adds	r4, #26
 8000b52:	42b5      	cmp	r5, r6
 8000b54:	d11a      	bne.n	8000b8c <_printf_common+0xc8>
 8000b56:	2000      	movs	r0, #0
 8000b58:	e008      	b.n	8000b6c <_printf_common+0xa8>
 8000b5a:	2301      	movs	r3, #1
 8000b5c:	4652      	mov	r2, sl
 8000b5e:	4649      	mov	r1, r9
 8000b60:	4638      	mov	r0, r7
 8000b62:	47c0      	blx	r8
 8000b64:	3001      	adds	r0, #1
 8000b66:	d103      	bne.n	8000b70 <_printf_common+0xac>
 8000b68:	f04f 30ff 	mov.w	r0, #4294967295
 8000b6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b70:	3501      	adds	r5, #1
 8000b72:	e7c6      	b.n	8000b02 <_printf_common+0x3e>
 8000b74:	18e1      	adds	r1, r4, r3
 8000b76:	1c5a      	adds	r2, r3, #1
 8000b78:	2030      	movs	r0, #48	; 0x30
 8000b7a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000b7e:	4422      	add	r2, r4
 8000b80:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000b84:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000b88:	3302      	adds	r3, #2
 8000b8a:	e7c7      	b.n	8000b1c <_printf_common+0x58>
 8000b8c:	2301      	movs	r3, #1
 8000b8e:	4622      	mov	r2, r4
 8000b90:	4649      	mov	r1, r9
 8000b92:	4638      	mov	r0, r7
 8000b94:	47c0      	blx	r8
 8000b96:	3001      	adds	r0, #1
 8000b98:	d0e6      	beq.n	8000b68 <_printf_common+0xa4>
 8000b9a:	3601      	adds	r6, #1
 8000b9c:	e7d9      	b.n	8000b52 <_printf_common+0x8e>
	...

08000ba0 <_printf_i>:
 8000ba0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000ba4:	460c      	mov	r4, r1
 8000ba6:	4691      	mov	r9, r2
 8000ba8:	7e27      	ldrb	r7, [r4, #24]
 8000baa:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000bac:	2f78      	cmp	r7, #120	; 0x78
 8000bae:	4680      	mov	r8, r0
 8000bb0:	469a      	mov	sl, r3
 8000bb2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000bb6:	d807      	bhi.n	8000bc8 <_printf_i+0x28>
 8000bb8:	2f62      	cmp	r7, #98	; 0x62
 8000bba:	d80a      	bhi.n	8000bd2 <_printf_i+0x32>
 8000bbc:	2f00      	cmp	r7, #0
 8000bbe:	f000 80d8 	beq.w	8000d72 <_printf_i+0x1d2>
 8000bc2:	2f58      	cmp	r7, #88	; 0x58
 8000bc4:	f000 80a3 	beq.w	8000d0e <_printf_i+0x16e>
 8000bc8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000bcc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000bd0:	e03a      	b.n	8000c48 <_printf_i+0xa8>
 8000bd2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000bd6:	2b15      	cmp	r3, #21
 8000bd8:	d8f6      	bhi.n	8000bc8 <_printf_i+0x28>
 8000bda:	a001      	add	r0, pc, #4	; (adr r0, 8000be0 <_printf_i+0x40>)
 8000bdc:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000be0:	08000c39 	.word	0x08000c39
 8000be4:	08000c4d 	.word	0x08000c4d
 8000be8:	08000bc9 	.word	0x08000bc9
 8000bec:	08000bc9 	.word	0x08000bc9
 8000bf0:	08000bc9 	.word	0x08000bc9
 8000bf4:	08000bc9 	.word	0x08000bc9
 8000bf8:	08000c4d 	.word	0x08000c4d
 8000bfc:	08000bc9 	.word	0x08000bc9
 8000c00:	08000bc9 	.word	0x08000bc9
 8000c04:	08000bc9 	.word	0x08000bc9
 8000c08:	08000bc9 	.word	0x08000bc9
 8000c0c:	08000d59 	.word	0x08000d59
 8000c10:	08000c7d 	.word	0x08000c7d
 8000c14:	08000d3b 	.word	0x08000d3b
 8000c18:	08000bc9 	.word	0x08000bc9
 8000c1c:	08000bc9 	.word	0x08000bc9
 8000c20:	08000d7b 	.word	0x08000d7b
 8000c24:	08000bc9 	.word	0x08000bc9
 8000c28:	08000c7d 	.word	0x08000c7d
 8000c2c:	08000bc9 	.word	0x08000bc9
 8000c30:	08000bc9 	.word	0x08000bc9
 8000c34:	08000d43 	.word	0x08000d43
 8000c38:	680b      	ldr	r3, [r1, #0]
 8000c3a:	1d1a      	adds	r2, r3, #4
 8000c3c:	681b      	ldr	r3, [r3, #0]
 8000c3e:	600a      	str	r2, [r1, #0]
 8000c40:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000c44:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000c48:	2301      	movs	r3, #1
 8000c4a:	e0a3      	b.n	8000d94 <_printf_i+0x1f4>
 8000c4c:	6825      	ldr	r5, [r4, #0]
 8000c4e:	6808      	ldr	r0, [r1, #0]
 8000c50:	062e      	lsls	r6, r5, #24
 8000c52:	f100 0304 	add.w	r3, r0, #4
 8000c56:	d50a      	bpl.n	8000c6e <_printf_i+0xce>
 8000c58:	6805      	ldr	r5, [r0, #0]
 8000c5a:	600b      	str	r3, [r1, #0]
 8000c5c:	2d00      	cmp	r5, #0
 8000c5e:	da03      	bge.n	8000c68 <_printf_i+0xc8>
 8000c60:	232d      	movs	r3, #45	; 0x2d
 8000c62:	426d      	negs	r5, r5
 8000c64:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000c68:	485e      	ldr	r0, [pc, #376]	; (8000de4 <_printf_i+0x244>)
 8000c6a:	230a      	movs	r3, #10
 8000c6c:	e019      	b.n	8000ca2 <_printf_i+0x102>
 8000c6e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000c72:	6805      	ldr	r5, [r0, #0]
 8000c74:	600b      	str	r3, [r1, #0]
 8000c76:	bf18      	it	ne
 8000c78:	b22d      	sxthne	r5, r5
 8000c7a:	e7ef      	b.n	8000c5c <_printf_i+0xbc>
 8000c7c:	680b      	ldr	r3, [r1, #0]
 8000c7e:	6825      	ldr	r5, [r4, #0]
 8000c80:	1d18      	adds	r0, r3, #4
 8000c82:	6008      	str	r0, [r1, #0]
 8000c84:	0628      	lsls	r0, r5, #24
 8000c86:	d501      	bpl.n	8000c8c <_printf_i+0xec>
 8000c88:	681d      	ldr	r5, [r3, #0]
 8000c8a:	e002      	b.n	8000c92 <_printf_i+0xf2>
 8000c8c:	0669      	lsls	r1, r5, #25
 8000c8e:	d5fb      	bpl.n	8000c88 <_printf_i+0xe8>
 8000c90:	881d      	ldrh	r5, [r3, #0]
 8000c92:	4854      	ldr	r0, [pc, #336]	; (8000de4 <_printf_i+0x244>)
 8000c94:	2f6f      	cmp	r7, #111	; 0x6f
 8000c96:	bf0c      	ite	eq
 8000c98:	2308      	moveq	r3, #8
 8000c9a:	230a      	movne	r3, #10
 8000c9c:	2100      	movs	r1, #0
 8000c9e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000ca2:	6866      	ldr	r6, [r4, #4]
 8000ca4:	60a6      	str	r6, [r4, #8]
 8000ca6:	2e00      	cmp	r6, #0
 8000ca8:	bfa2      	ittt	ge
 8000caa:	6821      	ldrge	r1, [r4, #0]
 8000cac:	f021 0104 	bicge.w	r1, r1, #4
 8000cb0:	6021      	strge	r1, [r4, #0]
 8000cb2:	b90d      	cbnz	r5, 8000cb8 <_printf_i+0x118>
 8000cb4:	2e00      	cmp	r6, #0
 8000cb6:	d04d      	beq.n	8000d54 <_printf_i+0x1b4>
 8000cb8:	4616      	mov	r6, r2
 8000cba:	fbb5 f1f3 	udiv	r1, r5, r3
 8000cbe:	fb03 5711 	mls	r7, r3, r1, r5
 8000cc2:	5dc7      	ldrb	r7, [r0, r7]
 8000cc4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000cc8:	462f      	mov	r7, r5
 8000cca:	42bb      	cmp	r3, r7
 8000ccc:	460d      	mov	r5, r1
 8000cce:	d9f4      	bls.n	8000cba <_printf_i+0x11a>
 8000cd0:	2b08      	cmp	r3, #8
 8000cd2:	d10b      	bne.n	8000cec <_printf_i+0x14c>
 8000cd4:	6823      	ldr	r3, [r4, #0]
 8000cd6:	07df      	lsls	r7, r3, #31
 8000cd8:	d508      	bpl.n	8000cec <_printf_i+0x14c>
 8000cda:	6923      	ldr	r3, [r4, #16]
 8000cdc:	6861      	ldr	r1, [r4, #4]
 8000cde:	4299      	cmp	r1, r3
 8000ce0:	bfde      	ittt	le
 8000ce2:	2330      	movle	r3, #48	; 0x30
 8000ce4:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000ce8:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000cec:	1b92      	subs	r2, r2, r6
 8000cee:	6122      	str	r2, [r4, #16]
 8000cf0:	f8cd a000 	str.w	sl, [sp]
 8000cf4:	464b      	mov	r3, r9
 8000cf6:	aa03      	add	r2, sp, #12
 8000cf8:	4621      	mov	r1, r4
 8000cfa:	4640      	mov	r0, r8
 8000cfc:	f7ff fee2 	bl	8000ac4 <_printf_common>
 8000d00:	3001      	adds	r0, #1
 8000d02:	d14c      	bne.n	8000d9e <_printf_i+0x1fe>
 8000d04:	f04f 30ff 	mov.w	r0, #4294967295
 8000d08:	b004      	add	sp, #16
 8000d0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d0e:	4835      	ldr	r0, [pc, #212]	; (8000de4 <_printf_i+0x244>)
 8000d10:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000d14:	6823      	ldr	r3, [r4, #0]
 8000d16:	680e      	ldr	r6, [r1, #0]
 8000d18:	061f      	lsls	r7, r3, #24
 8000d1a:	f856 5b04 	ldr.w	r5, [r6], #4
 8000d1e:	600e      	str	r6, [r1, #0]
 8000d20:	d514      	bpl.n	8000d4c <_printf_i+0x1ac>
 8000d22:	07d9      	lsls	r1, r3, #31
 8000d24:	bf44      	itt	mi
 8000d26:	f043 0320 	orrmi.w	r3, r3, #32
 8000d2a:	6023      	strmi	r3, [r4, #0]
 8000d2c:	b91d      	cbnz	r5, 8000d36 <_printf_i+0x196>
 8000d2e:	6823      	ldr	r3, [r4, #0]
 8000d30:	f023 0320 	bic.w	r3, r3, #32
 8000d34:	6023      	str	r3, [r4, #0]
 8000d36:	2310      	movs	r3, #16
 8000d38:	e7b0      	b.n	8000c9c <_printf_i+0xfc>
 8000d3a:	6823      	ldr	r3, [r4, #0]
 8000d3c:	f043 0320 	orr.w	r3, r3, #32
 8000d40:	6023      	str	r3, [r4, #0]
 8000d42:	2378      	movs	r3, #120	; 0x78
 8000d44:	4828      	ldr	r0, [pc, #160]	; (8000de8 <_printf_i+0x248>)
 8000d46:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000d4a:	e7e3      	b.n	8000d14 <_printf_i+0x174>
 8000d4c:	065e      	lsls	r6, r3, #25
 8000d4e:	bf48      	it	mi
 8000d50:	b2ad      	uxthmi	r5, r5
 8000d52:	e7e6      	b.n	8000d22 <_printf_i+0x182>
 8000d54:	4616      	mov	r6, r2
 8000d56:	e7bb      	b.n	8000cd0 <_printf_i+0x130>
 8000d58:	680b      	ldr	r3, [r1, #0]
 8000d5a:	6826      	ldr	r6, [r4, #0]
 8000d5c:	6960      	ldr	r0, [r4, #20]
 8000d5e:	1d1d      	adds	r5, r3, #4
 8000d60:	600d      	str	r5, [r1, #0]
 8000d62:	0635      	lsls	r5, r6, #24
 8000d64:	681b      	ldr	r3, [r3, #0]
 8000d66:	d501      	bpl.n	8000d6c <_printf_i+0x1cc>
 8000d68:	6018      	str	r0, [r3, #0]
 8000d6a:	e002      	b.n	8000d72 <_printf_i+0x1d2>
 8000d6c:	0671      	lsls	r1, r6, #25
 8000d6e:	d5fb      	bpl.n	8000d68 <_printf_i+0x1c8>
 8000d70:	8018      	strh	r0, [r3, #0]
 8000d72:	2300      	movs	r3, #0
 8000d74:	6123      	str	r3, [r4, #16]
 8000d76:	4616      	mov	r6, r2
 8000d78:	e7ba      	b.n	8000cf0 <_printf_i+0x150>
 8000d7a:	680b      	ldr	r3, [r1, #0]
 8000d7c:	1d1a      	adds	r2, r3, #4
 8000d7e:	600a      	str	r2, [r1, #0]
 8000d80:	681e      	ldr	r6, [r3, #0]
 8000d82:	6862      	ldr	r2, [r4, #4]
 8000d84:	2100      	movs	r1, #0
 8000d86:	4630      	mov	r0, r6
 8000d88:	f7ff fa32 	bl	80001f0 <memchr>
 8000d8c:	b108      	cbz	r0, 8000d92 <_printf_i+0x1f2>
 8000d8e:	1b80      	subs	r0, r0, r6
 8000d90:	6060      	str	r0, [r4, #4]
 8000d92:	6863      	ldr	r3, [r4, #4]
 8000d94:	6123      	str	r3, [r4, #16]
 8000d96:	2300      	movs	r3, #0
 8000d98:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d9c:	e7a8      	b.n	8000cf0 <_printf_i+0x150>
 8000d9e:	6923      	ldr	r3, [r4, #16]
 8000da0:	4632      	mov	r2, r6
 8000da2:	4649      	mov	r1, r9
 8000da4:	4640      	mov	r0, r8
 8000da6:	47d0      	blx	sl
 8000da8:	3001      	adds	r0, #1
 8000daa:	d0ab      	beq.n	8000d04 <_printf_i+0x164>
 8000dac:	6823      	ldr	r3, [r4, #0]
 8000dae:	079b      	lsls	r3, r3, #30
 8000db0:	d413      	bmi.n	8000dda <_printf_i+0x23a>
 8000db2:	68e0      	ldr	r0, [r4, #12]
 8000db4:	9b03      	ldr	r3, [sp, #12]
 8000db6:	4298      	cmp	r0, r3
 8000db8:	bfb8      	it	lt
 8000dba:	4618      	movlt	r0, r3
 8000dbc:	e7a4      	b.n	8000d08 <_printf_i+0x168>
 8000dbe:	2301      	movs	r3, #1
 8000dc0:	4632      	mov	r2, r6
 8000dc2:	4649      	mov	r1, r9
 8000dc4:	4640      	mov	r0, r8
 8000dc6:	47d0      	blx	sl
 8000dc8:	3001      	adds	r0, #1
 8000dca:	d09b      	beq.n	8000d04 <_printf_i+0x164>
 8000dcc:	3501      	adds	r5, #1
 8000dce:	68e3      	ldr	r3, [r4, #12]
 8000dd0:	9903      	ldr	r1, [sp, #12]
 8000dd2:	1a5b      	subs	r3, r3, r1
 8000dd4:	42ab      	cmp	r3, r5
 8000dd6:	dcf2      	bgt.n	8000dbe <_printf_i+0x21e>
 8000dd8:	e7eb      	b.n	8000db2 <_printf_i+0x212>
 8000dda:	2500      	movs	r5, #0
 8000ddc:	f104 0619 	add.w	r6, r4, #25
 8000de0:	e7f5      	b.n	8000dce <_printf_i+0x22e>
 8000de2:	bf00      	nop
 8000de4:	080014ed 	.word	0x080014ed
 8000de8:	080014fe 	.word	0x080014fe

08000dec <_sbrk_r>:
 8000dec:	b538      	push	{r3, r4, r5, lr}
 8000dee:	4d06      	ldr	r5, [pc, #24]	; (8000e08 <_sbrk_r+0x1c>)
 8000df0:	2300      	movs	r3, #0
 8000df2:	4604      	mov	r4, r0
 8000df4:	4608      	mov	r0, r1
 8000df6:	602b      	str	r3, [r5, #0]
 8000df8:	f7ff fb0e 	bl	8000418 <_sbrk>
 8000dfc:	1c43      	adds	r3, r0, #1
 8000dfe:	d102      	bne.n	8000e06 <_sbrk_r+0x1a>
 8000e00:	682b      	ldr	r3, [r5, #0]
 8000e02:	b103      	cbz	r3, 8000e06 <_sbrk_r+0x1a>
 8000e04:	6023      	str	r3, [r4, #0]
 8000e06:	bd38      	pop	{r3, r4, r5, pc}
 8000e08:	20000098 	.word	0x20000098

08000e0c <__sread>:
 8000e0c:	b510      	push	{r4, lr}
 8000e0e:	460c      	mov	r4, r1
 8000e10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e14:	f000 fab4 	bl	8001380 <_read_r>
 8000e18:	2800      	cmp	r0, #0
 8000e1a:	bfab      	itete	ge
 8000e1c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e1e:	89a3      	ldrhlt	r3, [r4, #12]
 8000e20:	181b      	addge	r3, r3, r0
 8000e22:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000e26:	bfac      	ite	ge
 8000e28:	6563      	strge	r3, [r4, #84]	; 0x54
 8000e2a:	81a3      	strhlt	r3, [r4, #12]
 8000e2c:	bd10      	pop	{r4, pc}

08000e2e <__swrite>:
 8000e2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e32:	461f      	mov	r7, r3
 8000e34:	898b      	ldrh	r3, [r1, #12]
 8000e36:	05db      	lsls	r3, r3, #23
 8000e38:	4605      	mov	r5, r0
 8000e3a:	460c      	mov	r4, r1
 8000e3c:	4616      	mov	r6, r2
 8000e3e:	d505      	bpl.n	8000e4c <__swrite+0x1e>
 8000e40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e44:	2302      	movs	r3, #2
 8000e46:	2200      	movs	r2, #0
 8000e48:	f000 f9c8 	bl	80011dc <_lseek_r>
 8000e4c:	89a3      	ldrh	r3, [r4, #12]
 8000e4e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e52:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000e56:	81a3      	strh	r3, [r4, #12]
 8000e58:	4632      	mov	r2, r6
 8000e5a:	463b      	mov	r3, r7
 8000e5c:	4628      	mov	r0, r5
 8000e5e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e62:	f000 b869 	b.w	8000f38 <_write_r>

08000e66 <__sseek>:
 8000e66:	b510      	push	{r4, lr}
 8000e68:	460c      	mov	r4, r1
 8000e6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e6e:	f000 f9b5 	bl	80011dc <_lseek_r>
 8000e72:	1c43      	adds	r3, r0, #1
 8000e74:	89a3      	ldrh	r3, [r4, #12]
 8000e76:	bf15      	itete	ne
 8000e78:	6560      	strne	r0, [r4, #84]	; 0x54
 8000e7a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000e7e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000e82:	81a3      	strheq	r3, [r4, #12]
 8000e84:	bf18      	it	ne
 8000e86:	81a3      	strhne	r3, [r4, #12]
 8000e88:	bd10      	pop	{r4, pc}

08000e8a <__sclose>:
 8000e8a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e8e:	f000 b8d3 	b.w	8001038 <_close_r>
	...

08000e94 <__swbuf_r>:
 8000e94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e96:	460e      	mov	r6, r1
 8000e98:	4614      	mov	r4, r2
 8000e9a:	4605      	mov	r5, r0
 8000e9c:	b118      	cbz	r0, 8000ea6 <__swbuf_r+0x12>
 8000e9e:	6983      	ldr	r3, [r0, #24]
 8000ea0:	b90b      	cbnz	r3, 8000ea6 <__swbuf_r+0x12>
 8000ea2:	f7ff fbbb 	bl	800061c <__sinit>
 8000ea6:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <__swbuf_r+0x98>)
 8000ea8:	429c      	cmp	r4, r3
 8000eaa:	d12b      	bne.n	8000f04 <__swbuf_r+0x70>
 8000eac:	686c      	ldr	r4, [r5, #4]
 8000eae:	69a3      	ldr	r3, [r4, #24]
 8000eb0:	60a3      	str	r3, [r4, #8]
 8000eb2:	89a3      	ldrh	r3, [r4, #12]
 8000eb4:	071a      	lsls	r2, r3, #28
 8000eb6:	d52f      	bpl.n	8000f18 <__swbuf_r+0x84>
 8000eb8:	6923      	ldr	r3, [r4, #16]
 8000eba:	b36b      	cbz	r3, 8000f18 <__swbuf_r+0x84>
 8000ebc:	6923      	ldr	r3, [r4, #16]
 8000ebe:	6820      	ldr	r0, [r4, #0]
 8000ec0:	1ac0      	subs	r0, r0, r3
 8000ec2:	6963      	ldr	r3, [r4, #20]
 8000ec4:	b2f6      	uxtb	r6, r6
 8000ec6:	4283      	cmp	r3, r0
 8000ec8:	4637      	mov	r7, r6
 8000eca:	dc04      	bgt.n	8000ed6 <__swbuf_r+0x42>
 8000ecc:	4621      	mov	r1, r4
 8000ece:	4628      	mov	r0, r5
 8000ed0:	f000 f948 	bl	8001164 <_fflush_r>
 8000ed4:	bb30      	cbnz	r0, 8000f24 <__swbuf_r+0x90>
 8000ed6:	68a3      	ldr	r3, [r4, #8]
 8000ed8:	3b01      	subs	r3, #1
 8000eda:	60a3      	str	r3, [r4, #8]
 8000edc:	6823      	ldr	r3, [r4, #0]
 8000ede:	1c5a      	adds	r2, r3, #1
 8000ee0:	6022      	str	r2, [r4, #0]
 8000ee2:	701e      	strb	r6, [r3, #0]
 8000ee4:	6963      	ldr	r3, [r4, #20]
 8000ee6:	3001      	adds	r0, #1
 8000ee8:	4283      	cmp	r3, r0
 8000eea:	d004      	beq.n	8000ef6 <__swbuf_r+0x62>
 8000eec:	89a3      	ldrh	r3, [r4, #12]
 8000eee:	07db      	lsls	r3, r3, #31
 8000ef0:	d506      	bpl.n	8000f00 <__swbuf_r+0x6c>
 8000ef2:	2e0a      	cmp	r6, #10
 8000ef4:	d104      	bne.n	8000f00 <__swbuf_r+0x6c>
 8000ef6:	4621      	mov	r1, r4
 8000ef8:	4628      	mov	r0, r5
 8000efa:	f000 f933 	bl	8001164 <_fflush_r>
 8000efe:	b988      	cbnz	r0, 8000f24 <__swbuf_r+0x90>
 8000f00:	4638      	mov	r0, r7
 8000f02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f04:	4b0a      	ldr	r3, [pc, #40]	; (8000f30 <__swbuf_r+0x9c>)
 8000f06:	429c      	cmp	r4, r3
 8000f08:	d101      	bne.n	8000f0e <__swbuf_r+0x7a>
 8000f0a:	68ac      	ldr	r4, [r5, #8]
 8000f0c:	e7cf      	b.n	8000eae <__swbuf_r+0x1a>
 8000f0e:	4b09      	ldr	r3, [pc, #36]	; (8000f34 <__swbuf_r+0xa0>)
 8000f10:	429c      	cmp	r4, r3
 8000f12:	bf08      	it	eq
 8000f14:	68ec      	ldreq	r4, [r5, #12]
 8000f16:	e7ca      	b.n	8000eae <__swbuf_r+0x1a>
 8000f18:	4621      	mov	r1, r4
 8000f1a:	4628      	mov	r0, r5
 8000f1c:	f000 f81e 	bl	8000f5c <__swsetup_r>
 8000f20:	2800      	cmp	r0, #0
 8000f22:	d0cb      	beq.n	8000ebc <__swbuf_r+0x28>
 8000f24:	f04f 37ff 	mov.w	r7, #4294967295
 8000f28:	e7ea      	b.n	8000f00 <__swbuf_r+0x6c>
 8000f2a:	bf00      	nop
 8000f2c:	0800149c 	.word	0x0800149c
 8000f30:	080014bc 	.word	0x080014bc
 8000f34:	0800147c 	.word	0x0800147c

08000f38 <_write_r>:
 8000f38:	b538      	push	{r3, r4, r5, lr}
 8000f3a:	4d07      	ldr	r5, [pc, #28]	; (8000f58 <_write_r+0x20>)
 8000f3c:	4604      	mov	r4, r0
 8000f3e:	4608      	mov	r0, r1
 8000f40:	4611      	mov	r1, r2
 8000f42:	2200      	movs	r2, #0
 8000f44:	602a      	str	r2, [r5, #0]
 8000f46:	461a      	mov	r2, r3
 8000f48:	f7ff fa15 	bl	8000376 <_write>
 8000f4c:	1c43      	adds	r3, r0, #1
 8000f4e:	d102      	bne.n	8000f56 <_write_r+0x1e>
 8000f50:	682b      	ldr	r3, [r5, #0]
 8000f52:	b103      	cbz	r3, 8000f56 <_write_r+0x1e>
 8000f54:	6023      	str	r3, [r4, #0]
 8000f56:	bd38      	pop	{r3, r4, r5, pc}
 8000f58:	20000098 	.word	0x20000098

08000f5c <__swsetup_r>:
 8000f5c:	4b32      	ldr	r3, [pc, #200]	; (8001028 <__swsetup_r+0xcc>)
 8000f5e:	b570      	push	{r4, r5, r6, lr}
 8000f60:	681d      	ldr	r5, [r3, #0]
 8000f62:	4606      	mov	r6, r0
 8000f64:	460c      	mov	r4, r1
 8000f66:	b125      	cbz	r5, 8000f72 <__swsetup_r+0x16>
 8000f68:	69ab      	ldr	r3, [r5, #24]
 8000f6a:	b913      	cbnz	r3, 8000f72 <__swsetup_r+0x16>
 8000f6c:	4628      	mov	r0, r5
 8000f6e:	f7ff fb55 	bl	800061c <__sinit>
 8000f72:	4b2e      	ldr	r3, [pc, #184]	; (800102c <__swsetup_r+0xd0>)
 8000f74:	429c      	cmp	r4, r3
 8000f76:	d10f      	bne.n	8000f98 <__swsetup_r+0x3c>
 8000f78:	686c      	ldr	r4, [r5, #4]
 8000f7a:	89a3      	ldrh	r3, [r4, #12]
 8000f7c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000f80:	0719      	lsls	r1, r3, #28
 8000f82:	d42c      	bmi.n	8000fde <__swsetup_r+0x82>
 8000f84:	06dd      	lsls	r5, r3, #27
 8000f86:	d411      	bmi.n	8000fac <__swsetup_r+0x50>
 8000f88:	2309      	movs	r3, #9
 8000f8a:	6033      	str	r3, [r6, #0]
 8000f8c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000f90:	81a3      	strh	r3, [r4, #12]
 8000f92:	f04f 30ff 	mov.w	r0, #4294967295
 8000f96:	e03e      	b.n	8001016 <__swsetup_r+0xba>
 8000f98:	4b25      	ldr	r3, [pc, #148]	; (8001030 <__swsetup_r+0xd4>)
 8000f9a:	429c      	cmp	r4, r3
 8000f9c:	d101      	bne.n	8000fa2 <__swsetup_r+0x46>
 8000f9e:	68ac      	ldr	r4, [r5, #8]
 8000fa0:	e7eb      	b.n	8000f7a <__swsetup_r+0x1e>
 8000fa2:	4b24      	ldr	r3, [pc, #144]	; (8001034 <__swsetup_r+0xd8>)
 8000fa4:	429c      	cmp	r4, r3
 8000fa6:	bf08      	it	eq
 8000fa8:	68ec      	ldreq	r4, [r5, #12]
 8000faa:	e7e6      	b.n	8000f7a <__swsetup_r+0x1e>
 8000fac:	0758      	lsls	r0, r3, #29
 8000fae:	d512      	bpl.n	8000fd6 <__swsetup_r+0x7a>
 8000fb0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000fb2:	b141      	cbz	r1, 8000fc6 <__swsetup_r+0x6a>
 8000fb4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000fb8:	4299      	cmp	r1, r3
 8000fba:	d002      	beq.n	8000fc2 <__swsetup_r+0x66>
 8000fbc:	4630      	mov	r0, r6
 8000fbe:	f000 f98f 	bl	80012e0 <_free_r>
 8000fc2:	2300      	movs	r3, #0
 8000fc4:	6363      	str	r3, [r4, #52]	; 0x34
 8000fc6:	89a3      	ldrh	r3, [r4, #12]
 8000fc8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000fcc:	81a3      	strh	r3, [r4, #12]
 8000fce:	2300      	movs	r3, #0
 8000fd0:	6063      	str	r3, [r4, #4]
 8000fd2:	6923      	ldr	r3, [r4, #16]
 8000fd4:	6023      	str	r3, [r4, #0]
 8000fd6:	89a3      	ldrh	r3, [r4, #12]
 8000fd8:	f043 0308 	orr.w	r3, r3, #8
 8000fdc:	81a3      	strh	r3, [r4, #12]
 8000fde:	6923      	ldr	r3, [r4, #16]
 8000fe0:	b94b      	cbnz	r3, 8000ff6 <__swsetup_r+0x9a>
 8000fe2:	89a3      	ldrh	r3, [r4, #12]
 8000fe4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000fe8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000fec:	d003      	beq.n	8000ff6 <__swsetup_r+0x9a>
 8000fee:	4621      	mov	r1, r4
 8000ff0:	4630      	mov	r0, r6
 8000ff2:	f000 f929 	bl	8001248 <__smakebuf_r>
 8000ff6:	89a0      	ldrh	r0, [r4, #12]
 8000ff8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000ffc:	f010 0301 	ands.w	r3, r0, #1
 8001000:	d00a      	beq.n	8001018 <__swsetup_r+0xbc>
 8001002:	2300      	movs	r3, #0
 8001004:	60a3      	str	r3, [r4, #8]
 8001006:	6963      	ldr	r3, [r4, #20]
 8001008:	425b      	negs	r3, r3
 800100a:	61a3      	str	r3, [r4, #24]
 800100c:	6923      	ldr	r3, [r4, #16]
 800100e:	b943      	cbnz	r3, 8001022 <__swsetup_r+0xc6>
 8001010:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001014:	d1ba      	bne.n	8000f8c <__swsetup_r+0x30>
 8001016:	bd70      	pop	{r4, r5, r6, pc}
 8001018:	0781      	lsls	r1, r0, #30
 800101a:	bf58      	it	pl
 800101c:	6963      	ldrpl	r3, [r4, #20]
 800101e:	60a3      	str	r3, [r4, #8]
 8001020:	e7f4      	b.n	800100c <__swsetup_r+0xb0>
 8001022:	2000      	movs	r0, #0
 8001024:	e7f7      	b.n	8001016 <__swsetup_r+0xba>
 8001026:	bf00      	nop
 8001028:	20000000 	.word	0x20000000
 800102c:	0800149c 	.word	0x0800149c
 8001030:	080014bc 	.word	0x080014bc
 8001034:	0800147c 	.word	0x0800147c

08001038 <_close_r>:
 8001038:	b538      	push	{r3, r4, r5, lr}
 800103a:	4d06      	ldr	r5, [pc, #24]	; (8001054 <_close_r+0x1c>)
 800103c:	2300      	movs	r3, #0
 800103e:	4604      	mov	r4, r0
 8001040:	4608      	mov	r0, r1
 8001042:	602b      	str	r3, [r5, #0]
 8001044:	f7ff f9b3 	bl	80003ae <_close>
 8001048:	1c43      	adds	r3, r0, #1
 800104a:	d102      	bne.n	8001052 <_close_r+0x1a>
 800104c:	682b      	ldr	r3, [r5, #0]
 800104e:	b103      	cbz	r3, 8001052 <_close_r+0x1a>
 8001050:	6023      	str	r3, [r4, #0]
 8001052:	bd38      	pop	{r3, r4, r5, pc}
 8001054:	20000098 	.word	0x20000098

08001058 <__sflush_r>:
 8001058:	898a      	ldrh	r2, [r1, #12]
 800105a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800105e:	4605      	mov	r5, r0
 8001060:	0710      	lsls	r0, r2, #28
 8001062:	460c      	mov	r4, r1
 8001064:	d458      	bmi.n	8001118 <__sflush_r+0xc0>
 8001066:	684b      	ldr	r3, [r1, #4]
 8001068:	2b00      	cmp	r3, #0
 800106a:	dc05      	bgt.n	8001078 <__sflush_r+0x20>
 800106c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800106e:	2b00      	cmp	r3, #0
 8001070:	dc02      	bgt.n	8001078 <__sflush_r+0x20>
 8001072:	2000      	movs	r0, #0
 8001074:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001078:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800107a:	2e00      	cmp	r6, #0
 800107c:	d0f9      	beq.n	8001072 <__sflush_r+0x1a>
 800107e:	2300      	movs	r3, #0
 8001080:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001084:	682f      	ldr	r7, [r5, #0]
 8001086:	602b      	str	r3, [r5, #0]
 8001088:	d032      	beq.n	80010f0 <__sflush_r+0x98>
 800108a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800108c:	89a3      	ldrh	r3, [r4, #12]
 800108e:	075a      	lsls	r2, r3, #29
 8001090:	d505      	bpl.n	800109e <__sflush_r+0x46>
 8001092:	6863      	ldr	r3, [r4, #4]
 8001094:	1ac0      	subs	r0, r0, r3
 8001096:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001098:	b10b      	cbz	r3, 800109e <__sflush_r+0x46>
 800109a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800109c:	1ac0      	subs	r0, r0, r3
 800109e:	2300      	movs	r3, #0
 80010a0:	4602      	mov	r2, r0
 80010a2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010a4:	6a21      	ldr	r1, [r4, #32]
 80010a6:	4628      	mov	r0, r5
 80010a8:	47b0      	blx	r6
 80010aa:	1c43      	adds	r3, r0, #1
 80010ac:	89a3      	ldrh	r3, [r4, #12]
 80010ae:	d106      	bne.n	80010be <__sflush_r+0x66>
 80010b0:	6829      	ldr	r1, [r5, #0]
 80010b2:	291d      	cmp	r1, #29
 80010b4:	d82c      	bhi.n	8001110 <__sflush_r+0xb8>
 80010b6:	4a2a      	ldr	r2, [pc, #168]	; (8001160 <__sflush_r+0x108>)
 80010b8:	40ca      	lsrs	r2, r1
 80010ba:	07d6      	lsls	r6, r2, #31
 80010bc:	d528      	bpl.n	8001110 <__sflush_r+0xb8>
 80010be:	2200      	movs	r2, #0
 80010c0:	6062      	str	r2, [r4, #4]
 80010c2:	04d9      	lsls	r1, r3, #19
 80010c4:	6922      	ldr	r2, [r4, #16]
 80010c6:	6022      	str	r2, [r4, #0]
 80010c8:	d504      	bpl.n	80010d4 <__sflush_r+0x7c>
 80010ca:	1c42      	adds	r2, r0, #1
 80010cc:	d101      	bne.n	80010d2 <__sflush_r+0x7a>
 80010ce:	682b      	ldr	r3, [r5, #0]
 80010d0:	b903      	cbnz	r3, 80010d4 <__sflush_r+0x7c>
 80010d2:	6560      	str	r0, [r4, #84]	; 0x54
 80010d4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80010d6:	602f      	str	r7, [r5, #0]
 80010d8:	2900      	cmp	r1, #0
 80010da:	d0ca      	beq.n	8001072 <__sflush_r+0x1a>
 80010dc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010e0:	4299      	cmp	r1, r3
 80010e2:	d002      	beq.n	80010ea <__sflush_r+0x92>
 80010e4:	4628      	mov	r0, r5
 80010e6:	f000 f8fb 	bl	80012e0 <_free_r>
 80010ea:	2000      	movs	r0, #0
 80010ec:	6360      	str	r0, [r4, #52]	; 0x34
 80010ee:	e7c1      	b.n	8001074 <__sflush_r+0x1c>
 80010f0:	6a21      	ldr	r1, [r4, #32]
 80010f2:	2301      	movs	r3, #1
 80010f4:	4628      	mov	r0, r5
 80010f6:	47b0      	blx	r6
 80010f8:	1c41      	adds	r1, r0, #1
 80010fa:	d1c7      	bne.n	800108c <__sflush_r+0x34>
 80010fc:	682b      	ldr	r3, [r5, #0]
 80010fe:	2b00      	cmp	r3, #0
 8001100:	d0c4      	beq.n	800108c <__sflush_r+0x34>
 8001102:	2b1d      	cmp	r3, #29
 8001104:	d001      	beq.n	800110a <__sflush_r+0xb2>
 8001106:	2b16      	cmp	r3, #22
 8001108:	d101      	bne.n	800110e <__sflush_r+0xb6>
 800110a:	602f      	str	r7, [r5, #0]
 800110c:	e7b1      	b.n	8001072 <__sflush_r+0x1a>
 800110e:	89a3      	ldrh	r3, [r4, #12]
 8001110:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001114:	81a3      	strh	r3, [r4, #12]
 8001116:	e7ad      	b.n	8001074 <__sflush_r+0x1c>
 8001118:	690f      	ldr	r7, [r1, #16]
 800111a:	2f00      	cmp	r7, #0
 800111c:	d0a9      	beq.n	8001072 <__sflush_r+0x1a>
 800111e:	0793      	lsls	r3, r2, #30
 8001120:	680e      	ldr	r6, [r1, #0]
 8001122:	bf08      	it	eq
 8001124:	694b      	ldreq	r3, [r1, #20]
 8001126:	600f      	str	r7, [r1, #0]
 8001128:	bf18      	it	ne
 800112a:	2300      	movne	r3, #0
 800112c:	eba6 0807 	sub.w	r8, r6, r7
 8001130:	608b      	str	r3, [r1, #8]
 8001132:	f1b8 0f00 	cmp.w	r8, #0
 8001136:	dd9c      	ble.n	8001072 <__sflush_r+0x1a>
 8001138:	6a21      	ldr	r1, [r4, #32]
 800113a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800113c:	4643      	mov	r3, r8
 800113e:	463a      	mov	r2, r7
 8001140:	4628      	mov	r0, r5
 8001142:	47b0      	blx	r6
 8001144:	2800      	cmp	r0, #0
 8001146:	dc06      	bgt.n	8001156 <__sflush_r+0xfe>
 8001148:	89a3      	ldrh	r3, [r4, #12]
 800114a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800114e:	81a3      	strh	r3, [r4, #12]
 8001150:	f04f 30ff 	mov.w	r0, #4294967295
 8001154:	e78e      	b.n	8001074 <__sflush_r+0x1c>
 8001156:	4407      	add	r7, r0
 8001158:	eba8 0800 	sub.w	r8, r8, r0
 800115c:	e7e9      	b.n	8001132 <__sflush_r+0xda>
 800115e:	bf00      	nop
 8001160:	20400001 	.word	0x20400001

08001164 <_fflush_r>:
 8001164:	b538      	push	{r3, r4, r5, lr}
 8001166:	690b      	ldr	r3, [r1, #16]
 8001168:	4605      	mov	r5, r0
 800116a:	460c      	mov	r4, r1
 800116c:	b913      	cbnz	r3, 8001174 <_fflush_r+0x10>
 800116e:	2500      	movs	r5, #0
 8001170:	4628      	mov	r0, r5
 8001172:	bd38      	pop	{r3, r4, r5, pc}
 8001174:	b118      	cbz	r0, 800117e <_fflush_r+0x1a>
 8001176:	6983      	ldr	r3, [r0, #24]
 8001178:	b90b      	cbnz	r3, 800117e <_fflush_r+0x1a>
 800117a:	f7ff fa4f 	bl	800061c <__sinit>
 800117e:	4b14      	ldr	r3, [pc, #80]	; (80011d0 <_fflush_r+0x6c>)
 8001180:	429c      	cmp	r4, r3
 8001182:	d11b      	bne.n	80011bc <_fflush_r+0x58>
 8001184:	686c      	ldr	r4, [r5, #4]
 8001186:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800118a:	2b00      	cmp	r3, #0
 800118c:	d0ef      	beq.n	800116e <_fflush_r+0xa>
 800118e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001190:	07d0      	lsls	r0, r2, #31
 8001192:	d404      	bmi.n	800119e <_fflush_r+0x3a>
 8001194:	0599      	lsls	r1, r3, #22
 8001196:	d402      	bmi.n	800119e <_fflush_r+0x3a>
 8001198:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800119a:	f7ff fadd 	bl	8000758 <__retarget_lock_acquire_recursive>
 800119e:	4628      	mov	r0, r5
 80011a0:	4621      	mov	r1, r4
 80011a2:	f7ff ff59 	bl	8001058 <__sflush_r>
 80011a6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80011a8:	07da      	lsls	r2, r3, #31
 80011aa:	4605      	mov	r5, r0
 80011ac:	d4e0      	bmi.n	8001170 <_fflush_r+0xc>
 80011ae:	89a3      	ldrh	r3, [r4, #12]
 80011b0:	059b      	lsls	r3, r3, #22
 80011b2:	d4dd      	bmi.n	8001170 <_fflush_r+0xc>
 80011b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80011b6:	f7ff fad0 	bl	800075a <__retarget_lock_release_recursive>
 80011ba:	e7d9      	b.n	8001170 <_fflush_r+0xc>
 80011bc:	4b05      	ldr	r3, [pc, #20]	; (80011d4 <_fflush_r+0x70>)
 80011be:	429c      	cmp	r4, r3
 80011c0:	d101      	bne.n	80011c6 <_fflush_r+0x62>
 80011c2:	68ac      	ldr	r4, [r5, #8]
 80011c4:	e7df      	b.n	8001186 <_fflush_r+0x22>
 80011c6:	4b04      	ldr	r3, [pc, #16]	; (80011d8 <_fflush_r+0x74>)
 80011c8:	429c      	cmp	r4, r3
 80011ca:	bf08      	it	eq
 80011cc:	68ec      	ldreq	r4, [r5, #12]
 80011ce:	e7da      	b.n	8001186 <_fflush_r+0x22>
 80011d0:	0800149c 	.word	0x0800149c
 80011d4:	080014bc 	.word	0x080014bc
 80011d8:	0800147c 	.word	0x0800147c

080011dc <_lseek_r>:
 80011dc:	b538      	push	{r3, r4, r5, lr}
 80011de:	4d07      	ldr	r5, [pc, #28]	; (80011fc <_lseek_r+0x20>)
 80011e0:	4604      	mov	r4, r0
 80011e2:	4608      	mov	r0, r1
 80011e4:	4611      	mov	r1, r2
 80011e6:	2200      	movs	r2, #0
 80011e8:	602a      	str	r2, [r5, #0]
 80011ea:	461a      	mov	r2, r3
 80011ec:	f7ff f906 	bl	80003fc <_lseek>
 80011f0:	1c43      	adds	r3, r0, #1
 80011f2:	d102      	bne.n	80011fa <_lseek_r+0x1e>
 80011f4:	682b      	ldr	r3, [r5, #0]
 80011f6:	b103      	cbz	r3, 80011fa <_lseek_r+0x1e>
 80011f8:	6023      	str	r3, [r4, #0]
 80011fa:	bd38      	pop	{r3, r4, r5, pc}
 80011fc:	20000098 	.word	0x20000098

08001200 <__swhatbuf_r>:
 8001200:	b570      	push	{r4, r5, r6, lr}
 8001202:	460e      	mov	r6, r1
 8001204:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001208:	2900      	cmp	r1, #0
 800120a:	b096      	sub	sp, #88	; 0x58
 800120c:	4614      	mov	r4, r2
 800120e:	461d      	mov	r5, r3
 8001210:	da07      	bge.n	8001222 <__swhatbuf_r+0x22>
 8001212:	2300      	movs	r3, #0
 8001214:	602b      	str	r3, [r5, #0]
 8001216:	89b3      	ldrh	r3, [r6, #12]
 8001218:	061a      	lsls	r2, r3, #24
 800121a:	d410      	bmi.n	800123e <__swhatbuf_r+0x3e>
 800121c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001220:	e00e      	b.n	8001240 <__swhatbuf_r+0x40>
 8001222:	466a      	mov	r2, sp
 8001224:	f000 f8be 	bl	80013a4 <_fstat_r>
 8001228:	2800      	cmp	r0, #0
 800122a:	dbf2      	blt.n	8001212 <__swhatbuf_r+0x12>
 800122c:	9a01      	ldr	r2, [sp, #4]
 800122e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001232:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001236:	425a      	negs	r2, r3
 8001238:	415a      	adcs	r2, r3
 800123a:	602a      	str	r2, [r5, #0]
 800123c:	e7ee      	b.n	800121c <__swhatbuf_r+0x1c>
 800123e:	2340      	movs	r3, #64	; 0x40
 8001240:	2000      	movs	r0, #0
 8001242:	6023      	str	r3, [r4, #0]
 8001244:	b016      	add	sp, #88	; 0x58
 8001246:	bd70      	pop	{r4, r5, r6, pc}

08001248 <__smakebuf_r>:
 8001248:	898b      	ldrh	r3, [r1, #12]
 800124a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800124c:	079d      	lsls	r5, r3, #30
 800124e:	4606      	mov	r6, r0
 8001250:	460c      	mov	r4, r1
 8001252:	d507      	bpl.n	8001264 <__smakebuf_r+0x1c>
 8001254:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001258:	6023      	str	r3, [r4, #0]
 800125a:	6123      	str	r3, [r4, #16]
 800125c:	2301      	movs	r3, #1
 800125e:	6163      	str	r3, [r4, #20]
 8001260:	b002      	add	sp, #8
 8001262:	bd70      	pop	{r4, r5, r6, pc}
 8001264:	ab01      	add	r3, sp, #4
 8001266:	466a      	mov	r2, sp
 8001268:	f7ff ffca 	bl	8001200 <__swhatbuf_r>
 800126c:	9900      	ldr	r1, [sp, #0]
 800126e:	4605      	mov	r5, r0
 8001270:	4630      	mov	r0, r6
 8001272:	f7ff fa73 	bl	800075c <_malloc_r>
 8001276:	b948      	cbnz	r0, 800128c <__smakebuf_r+0x44>
 8001278:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800127c:	059a      	lsls	r2, r3, #22
 800127e:	d4ef      	bmi.n	8001260 <__smakebuf_r+0x18>
 8001280:	f023 0303 	bic.w	r3, r3, #3
 8001284:	f043 0302 	orr.w	r3, r3, #2
 8001288:	81a3      	strh	r3, [r4, #12]
 800128a:	e7e3      	b.n	8001254 <__smakebuf_r+0xc>
 800128c:	4b0d      	ldr	r3, [pc, #52]	; (80012c4 <__smakebuf_r+0x7c>)
 800128e:	62b3      	str	r3, [r6, #40]	; 0x28
 8001290:	89a3      	ldrh	r3, [r4, #12]
 8001292:	6020      	str	r0, [r4, #0]
 8001294:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001298:	81a3      	strh	r3, [r4, #12]
 800129a:	9b00      	ldr	r3, [sp, #0]
 800129c:	6163      	str	r3, [r4, #20]
 800129e:	9b01      	ldr	r3, [sp, #4]
 80012a0:	6120      	str	r0, [r4, #16]
 80012a2:	b15b      	cbz	r3, 80012bc <__smakebuf_r+0x74>
 80012a4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012a8:	4630      	mov	r0, r6
 80012aa:	f000 f88d 	bl	80013c8 <_isatty_r>
 80012ae:	b128      	cbz	r0, 80012bc <__smakebuf_r+0x74>
 80012b0:	89a3      	ldrh	r3, [r4, #12]
 80012b2:	f023 0303 	bic.w	r3, r3, #3
 80012b6:	f043 0301 	orr.w	r3, r3, #1
 80012ba:	81a3      	strh	r3, [r4, #12]
 80012bc:	89a0      	ldrh	r0, [r4, #12]
 80012be:	4305      	orrs	r5, r0
 80012c0:	81a5      	strh	r5, [r4, #12]
 80012c2:	e7cd      	b.n	8001260 <__smakebuf_r+0x18>
 80012c4:	080005b5 	.word	0x080005b5

080012c8 <__malloc_lock>:
 80012c8:	4801      	ldr	r0, [pc, #4]	; (80012d0 <__malloc_lock+0x8>)
 80012ca:	f7ff ba45 	b.w	8000758 <__retarget_lock_acquire_recursive>
 80012ce:	bf00      	nop
 80012d0:	20000090 	.word	0x20000090

080012d4 <__malloc_unlock>:
 80012d4:	4801      	ldr	r0, [pc, #4]	; (80012dc <__malloc_unlock+0x8>)
 80012d6:	f7ff ba40 	b.w	800075a <__retarget_lock_release_recursive>
 80012da:	bf00      	nop
 80012dc:	20000090 	.word	0x20000090

080012e0 <_free_r>:
 80012e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80012e2:	2900      	cmp	r1, #0
 80012e4:	d048      	beq.n	8001378 <_free_r+0x98>
 80012e6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80012ea:	9001      	str	r0, [sp, #4]
 80012ec:	2b00      	cmp	r3, #0
 80012ee:	f1a1 0404 	sub.w	r4, r1, #4
 80012f2:	bfb8      	it	lt
 80012f4:	18e4      	addlt	r4, r4, r3
 80012f6:	f7ff ffe7 	bl	80012c8 <__malloc_lock>
 80012fa:	4a20      	ldr	r2, [pc, #128]	; (800137c <_free_r+0x9c>)
 80012fc:	9801      	ldr	r0, [sp, #4]
 80012fe:	6813      	ldr	r3, [r2, #0]
 8001300:	4615      	mov	r5, r2
 8001302:	b933      	cbnz	r3, 8001312 <_free_r+0x32>
 8001304:	6063      	str	r3, [r4, #4]
 8001306:	6014      	str	r4, [r2, #0]
 8001308:	b003      	add	sp, #12
 800130a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800130e:	f7ff bfe1 	b.w	80012d4 <__malloc_unlock>
 8001312:	42a3      	cmp	r3, r4
 8001314:	d90b      	bls.n	800132e <_free_r+0x4e>
 8001316:	6821      	ldr	r1, [r4, #0]
 8001318:	1862      	adds	r2, r4, r1
 800131a:	4293      	cmp	r3, r2
 800131c:	bf04      	itt	eq
 800131e:	681a      	ldreq	r2, [r3, #0]
 8001320:	685b      	ldreq	r3, [r3, #4]
 8001322:	6063      	str	r3, [r4, #4]
 8001324:	bf04      	itt	eq
 8001326:	1852      	addeq	r2, r2, r1
 8001328:	6022      	streq	r2, [r4, #0]
 800132a:	602c      	str	r4, [r5, #0]
 800132c:	e7ec      	b.n	8001308 <_free_r+0x28>
 800132e:	461a      	mov	r2, r3
 8001330:	685b      	ldr	r3, [r3, #4]
 8001332:	b10b      	cbz	r3, 8001338 <_free_r+0x58>
 8001334:	42a3      	cmp	r3, r4
 8001336:	d9fa      	bls.n	800132e <_free_r+0x4e>
 8001338:	6811      	ldr	r1, [r2, #0]
 800133a:	1855      	adds	r5, r2, r1
 800133c:	42a5      	cmp	r5, r4
 800133e:	d10b      	bne.n	8001358 <_free_r+0x78>
 8001340:	6824      	ldr	r4, [r4, #0]
 8001342:	4421      	add	r1, r4
 8001344:	1854      	adds	r4, r2, r1
 8001346:	42a3      	cmp	r3, r4
 8001348:	6011      	str	r1, [r2, #0]
 800134a:	d1dd      	bne.n	8001308 <_free_r+0x28>
 800134c:	681c      	ldr	r4, [r3, #0]
 800134e:	685b      	ldr	r3, [r3, #4]
 8001350:	6053      	str	r3, [r2, #4]
 8001352:	4421      	add	r1, r4
 8001354:	6011      	str	r1, [r2, #0]
 8001356:	e7d7      	b.n	8001308 <_free_r+0x28>
 8001358:	d902      	bls.n	8001360 <_free_r+0x80>
 800135a:	230c      	movs	r3, #12
 800135c:	6003      	str	r3, [r0, #0]
 800135e:	e7d3      	b.n	8001308 <_free_r+0x28>
 8001360:	6825      	ldr	r5, [r4, #0]
 8001362:	1961      	adds	r1, r4, r5
 8001364:	428b      	cmp	r3, r1
 8001366:	bf04      	itt	eq
 8001368:	6819      	ldreq	r1, [r3, #0]
 800136a:	685b      	ldreq	r3, [r3, #4]
 800136c:	6063      	str	r3, [r4, #4]
 800136e:	bf04      	itt	eq
 8001370:	1949      	addeq	r1, r1, r5
 8001372:	6021      	streq	r1, [r4, #0]
 8001374:	6054      	str	r4, [r2, #4]
 8001376:	e7c7      	b.n	8001308 <_free_r+0x28>
 8001378:	b003      	add	sp, #12
 800137a:	bd30      	pop	{r4, r5, pc}
 800137c:	20000084 	.word	0x20000084

08001380 <_read_r>:
 8001380:	b538      	push	{r3, r4, r5, lr}
 8001382:	4d07      	ldr	r5, [pc, #28]	; (80013a0 <_read_r+0x20>)
 8001384:	4604      	mov	r4, r0
 8001386:	4608      	mov	r0, r1
 8001388:	4611      	mov	r1, r2
 800138a:	2200      	movs	r2, #0
 800138c:	602a      	str	r2, [r5, #0]
 800138e:	461a      	mov	r2, r3
 8001390:	f7fe ffd4 	bl	800033c <_read>
 8001394:	1c43      	adds	r3, r0, #1
 8001396:	d102      	bne.n	800139e <_read_r+0x1e>
 8001398:	682b      	ldr	r3, [r5, #0]
 800139a:	b103      	cbz	r3, 800139e <_read_r+0x1e>
 800139c:	6023      	str	r3, [r4, #0]
 800139e:	bd38      	pop	{r3, r4, r5, pc}
 80013a0:	20000098 	.word	0x20000098

080013a4 <_fstat_r>:
 80013a4:	b538      	push	{r3, r4, r5, lr}
 80013a6:	4d07      	ldr	r5, [pc, #28]	; (80013c4 <_fstat_r+0x20>)
 80013a8:	2300      	movs	r3, #0
 80013aa:	4604      	mov	r4, r0
 80013ac:	4608      	mov	r0, r1
 80013ae:	4611      	mov	r1, r2
 80013b0:	602b      	str	r3, [r5, #0]
 80013b2:	f7ff f808 	bl	80003c6 <_fstat>
 80013b6:	1c43      	adds	r3, r0, #1
 80013b8:	d102      	bne.n	80013c0 <_fstat_r+0x1c>
 80013ba:	682b      	ldr	r3, [r5, #0]
 80013bc:	b103      	cbz	r3, 80013c0 <_fstat_r+0x1c>
 80013be:	6023      	str	r3, [r4, #0]
 80013c0:	bd38      	pop	{r3, r4, r5, pc}
 80013c2:	bf00      	nop
 80013c4:	20000098 	.word	0x20000098

080013c8 <_isatty_r>:
 80013c8:	b538      	push	{r3, r4, r5, lr}
 80013ca:	4d06      	ldr	r5, [pc, #24]	; (80013e4 <_isatty_r+0x1c>)
 80013cc:	2300      	movs	r3, #0
 80013ce:	4604      	mov	r4, r0
 80013d0:	4608      	mov	r0, r1
 80013d2:	602b      	str	r3, [r5, #0]
 80013d4:	f7ff f807 	bl	80003e6 <_isatty>
 80013d8:	1c43      	adds	r3, r0, #1
 80013da:	d102      	bne.n	80013e2 <_isatty_r+0x1a>
 80013dc:	682b      	ldr	r3, [r5, #0]
 80013de:	b103      	cbz	r3, 80013e2 <_isatty_r+0x1a>
 80013e0:	6023      	str	r3, [r4, #0]
 80013e2:	bd38      	pop	{r3, r4, r5, pc}
 80013e4:	20000098 	.word	0x20000098

080013e8 <_init>:
 80013e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ea:	bf00      	nop
 80013ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013ee:	bc08      	pop	{r3}
 80013f0:	469e      	mov	lr, r3
 80013f2:	4770      	bx	lr

080013f4 <_fini>:
 80013f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013f6:	bf00      	nop
 80013f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013fa:	bc08      	pop	{r3}
 80013fc:	469e      	mov	lr, r3
 80013fe:	4770      	bx	lr
